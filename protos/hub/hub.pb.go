// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protos/hub/hub.proto

package hub

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/gogo/protobuf/types"
	proto "github.com/tron-us/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResponseCode int32

const (
	ResponseCode_SUCCESS                ResponseCode = 0
	ResponseCode_SIGNATURE_FORMAT_ERROR ResponseCode = 1
	ResponseCode_COMPUTE_ADDRESS_ERROR  ResponseCode = 2
	ResponseCode_OTHER_ERROR            ResponseCode = 20
)

var ResponseCode_name = map[int32]string{
	0:  "SUCCESS",
	1:  "SIGNATURE_FORMAT_ERROR",
	2:  "COMPUTE_ADDRESS_ERROR",
	20: "OTHER_ERROR",
}

var ResponseCode_value = map[string]int32{
	"SUCCESS":                0,
	"SIGNATURE_FORMAT_ERROR": 1,
	"COMPUTE_ADDRESS_ERROR":  2,
	"OTHER_ERROR":            20,
}

func (x ResponseCode) String() string {
	return proto.EnumName(ResponseCode_name, int32(x))
}

func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{0}
}

type SettingsReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" pg:"id"`
	RespSize             int32    `protobuf:"varint,2,opt,name=resp_size,json=respSize,proto3" json:"resp_size,omitempty" pg:"resp_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *SettingsReq) Reset()         { *m = SettingsReq{} }
func (m *SettingsReq) String() string { return proto.CompactTextString(m) }
func (*SettingsReq) ProtoMessage()    {}
func (*SettingsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{0}
}
func (m *SettingsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsReq.Unmarshal(m, b)
}
func (m *SettingsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsReq.Marshal(b, m, deterministic)
}
func (m *SettingsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsReq.Merge(m, src)
}
func (m *SettingsReq) XXX_Size() int {
	return xxx_messageInfo_SettingsReq.Size(m)
}
func (m *SettingsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsReq proto.InternalMessageInfo

func (m *SettingsReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SettingsReq) GetRespSize() int32 {
	if m != nil {
		return m.RespSize
	}
	return 0
}

type SettingsResp struct {
	Code                 ResponseCode  `protobuf:"varint,1,opt,name=code,proto3,enum=hub.ResponseCode" json:"code,omitempty" pg:"code"`
	Message              string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" pg:"message"`
	ResponseTime         *time.Time    `protobuf:"bytes,3,opt,name=response_time,json=responseTime,proto3,stdtime" json:"response_time,omitempty" pg:"response_time"`
	SettingsData         *SettingsData `protobuf:"bytes,4,opt,name=settings_data,json=settingsData,proto3" json:"settings_data,omitempty" pg:"settings_data"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" pg:"-"`
	XXX_unrecognized     []byte        `json:"-" pg:"-"`
	XXX_sizecache        int32         `json:"-" pg:"-"`
}

func (m *SettingsResp) Reset()         { *m = SettingsResp{} }
func (m *SettingsResp) String() string { return proto.CompactTextString(m) }
func (*SettingsResp) ProtoMessage()    {}
func (*SettingsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{1}
}
func (m *SettingsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsResp.Unmarshal(m, b)
}
func (m *SettingsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsResp.Marshal(b, m, deterministic)
}
func (m *SettingsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsResp.Merge(m, src)
}
func (m *SettingsResp) XXX_Size() int {
	return xxx_messageInfo_SettingsResp.Size(m)
}
func (m *SettingsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsResp.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsResp proto.InternalMessageInfo

func (m *SettingsResp) GetCode() ResponseCode {
	if m != nil {
		return m.Code
	}
	return ResponseCode_SUCCESS
}

func (m *SettingsResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SettingsResp) GetResponseTime() *time.Time {
	if m != nil {
		return m.ResponseTime
	}
	return nil
}

func (m *SettingsResp) GetSettingsData() *SettingsData {
	if m != nil {
		return m.SettingsData
	}
	return nil
}

type SettingsData struct {
	StoragePriceAsk      float64  `protobuf:"fixed64,1,opt,name=storage_price_ask,json=storagePriceAsk,proto3" json:"storage_price_ask,omitempty" pg:"storage_price_ask"`
	BandwidthPriceAsk    float64  `protobuf:"fixed64,2,opt,name=bandwidth_price_ask,json=bandwidthPriceAsk,proto3" json:"bandwidth_price_ask,omitempty" pg:"bandwidth_price_ask"`
	StorageTimeMin       float64  `protobuf:"fixed64,3,opt,name=storage_time_min,json=storageTimeMin,proto3" json:"storage_time_min,omitempty" pg:"storage_time_min"`
	BandwidthLimit       float64  `protobuf:"fixed64,4,opt,name=bandwidth_limit,json=bandwidthLimit,proto3" json:"bandwidth_limit,omitempty" pg:"bandwidth_limit"`
	CollateralStake      float64  `protobuf:"fixed64,5,opt,name=collateral_stake,json=collateralStake,proto3" json:"collateral_stake,omitempty" pg:"collateral_stake"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *SettingsData) Reset()         { *m = SettingsData{} }
func (m *SettingsData) String() string { return proto.CompactTextString(m) }
func (*SettingsData) ProtoMessage()    {}
func (*SettingsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{2}
}
func (m *SettingsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsData.Unmarshal(m, b)
}
func (m *SettingsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsData.Marshal(b, m, deterministic)
}
func (m *SettingsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsData.Merge(m, src)
}
func (m *SettingsData) XXX_Size() int {
	return xxx_messageInfo_SettingsData.Size(m)
}
func (m *SettingsData) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsData.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsData proto.InternalMessageInfo

func (m *SettingsData) GetStoragePriceAsk() float64 {
	if m != nil {
		return m.StoragePriceAsk
	}
	return 0
}

func (m *SettingsData) GetBandwidthPriceAsk() float64 {
	if m != nil {
		return m.BandwidthPriceAsk
	}
	return 0
}

func (m *SettingsData) GetStorageTimeMin() float64 {
	if m != nil {
		return m.StorageTimeMin
	}
	return 0
}

func (m *SettingsData) GetBandwidthLimit() float64 {
	if m != nil {
		return m.BandwidthLimit
	}
	return 0
}

func (m *SettingsData) GetCollateralStake() float64 {
	if m != nil {
		return m.CollateralStake
	}
	return 0
}

type HostsReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" pg:"id"`
	RespSize             int32    `protobuf:"varint,2,opt,name=resp_size,json=respSize,proto3" json:"resp_size,omitempty" pg:"resp_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *HostsReq) Reset()         { *m = HostsReq{} }
func (m *HostsReq) String() string { return proto.CompactTextString(m) }
func (*HostsReq) ProtoMessage()    {}
func (*HostsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{3}
}
func (m *HostsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostsReq.Unmarshal(m, b)
}
func (m *HostsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostsReq.Marshal(b, m, deterministic)
}
func (m *HostsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostsReq.Merge(m, src)
}
func (m *HostsReq) XXX_Size() int {
	return xxx_messageInfo_HostsReq.Size(m)
}
func (m *HostsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HostsReq.DiscardUnknown(m)
}

var xxx_messageInfo_HostsReq proto.InternalMessageInfo

func (m *HostsReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HostsReq) GetRespSize() int32 {
	if m != nil {
		return m.RespSize
	}
	return 0
}

type HostsResp struct {
	Code                 ResponseCode `protobuf:"varint,1,opt,name=code,proto3,enum=hub.ResponseCode" json:"code,omitempty" pg:"code"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" pg:"message"`
	Hosts                *HostsData   `protobuf:"bytes,3,opt,name=hosts,proto3" json:"hosts,omitempty" pg:"hosts"`
	RespSize             int32        `protobuf:"varint,4,opt,name=resp_size,json=respSize,proto3" json:"resp_size,omitempty" pg:"resp_size"`
	Mode                 string       `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty" pg:"mode"`
	ResponseTime         *time.Time   `protobuf:"bytes,6,opt,name=response_time,json=responseTime,proto3,stdtime" json:"response_time,omitempty" pg:"response_time"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" pg:"-"`
	XXX_unrecognized     []byte       `json:"-" pg:"-"`
	XXX_sizecache        int32        `json:"-" pg:"-"`
}

func (m *HostsResp) Reset()         { *m = HostsResp{} }
func (m *HostsResp) String() string { return proto.CompactTextString(m) }
func (*HostsResp) ProtoMessage()    {}
func (*HostsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{4}
}
func (m *HostsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostsResp.Unmarshal(m, b)
}
func (m *HostsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostsResp.Marshal(b, m, deterministic)
}
func (m *HostsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostsResp.Merge(m, src)
}
func (m *HostsResp) XXX_Size() int {
	return xxx_messageInfo_HostsResp.Size(m)
}
func (m *HostsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HostsResp.DiscardUnknown(m)
}

var xxx_messageInfo_HostsResp proto.InternalMessageInfo

func (m *HostsResp) GetCode() ResponseCode {
	if m != nil {
		return m.Code
	}
	return ResponseCode_SUCCESS
}

func (m *HostsResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HostsResp) GetHosts() *HostsData {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *HostsResp) GetRespSize() int32 {
	if m != nil {
		return m.RespSize
	}
	return 0
}

func (m *HostsResp) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *HostsResp) GetResponseTime() *time.Time {
	if m != nil {
		return m.ResponseTime
	}
	return nil
}

type HostsData struct {
	Hosts                []*Host  `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty" pg:"hosts"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *HostsData) Reset()         { *m = HostsData{} }
func (m *HostsData) String() string { return proto.CompactTextString(m) }
func (*HostsData) ProtoMessage()    {}
func (*HostsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{5}
}
func (m *HostsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostsData.Unmarshal(m, b)
}
func (m *HostsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostsData.Marshal(b, m, deterministic)
}
func (m *HostsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostsData.Merge(m, src)
}
func (m *HostsData) XXX_Size() int {
	return xxx_messageInfo_HostsData.Size(m)
}
func (m *HostsData) XXX_DiscardUnknown() {
	xxx_messageInfo_HostsData.DiscardUnknown(m)
}

var xxx_messageInfo_HostsData proto.InternalMessageInfo

func (m *HostsData) GetHosts() []*Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type Host struct {
	NodeId               string          `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" pg:"node_id"`
	TimeCreate           *time.Time      `protobuf:"bytes,2,opt,name=time_create,json=timeCreate,proto3,stdtime" json:"time_create,omitempty" pg:"time_create"`
	TimeUpdate           *time.Time      `protobuf:"bytes,3,opt,name=time_update,json=timeUpdate,proto3,stdtime" json:"time_update,omitempty" pg:"time_update"`
	NodeIp               string          `protobuf:"bytes,4,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty" pg:"node_ip"`
	Region               string          `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty" pg:"region"`
	BtfsVersion          string          `protobuf:"bytes,6,opt,name=btfs_version,json=btfsVersion,proto3" json:"btfs_version,omitempty" pg:"btfs_version"`
	Score                float32         `protobuf:"fixed32,7,opt,name=score,proto3" json:"score,omitempty" pg:"score"`
	HeartBeats           int64           `protobuf:"varint,8,opt,name=heart_beats,json=heartBeats,proto3" json:"heart_beats,omitempty" pg:"heart_beats"`
	Uptime               float32         `protobuf:"fixed32,9,opt,name=uptime,proto3" json:"uptime,omitempty" pg:"uptime"`
	Age                  int64           `protobuf:"varint,10,opt,name=age,proto3" json:"age,omitempty" pg:"age"`
	Reputation           float32         `protobuf:"fixed32,11,opt,name=reputation,proto3" json:"reputation,omitempty" pg:"reputation"`
	UploadAvg            float32         `protobuf:"fixed32,12,opt,name=upload_avg,json=uploadAvg,proto3" json:"upload_avg,omitempty" pg:"upload_avg"`
	UploadVar            float32         `protobuf:"fixed32,13,opt,name=upload_var,json=uploadVar,proto3" json:"upload_var,omitempty" pg:"upload_var"`
	DownloadAvg          float32         `protobuf:"fixed32,14,opt,name=download_avg,json=downloadAvg,proto3" json:"download_avg,omitempty" pg:"download_avg"`
	DownloadVar          float32         `protobuf:"fixed32,15,opt,name=download_var,json=downloadVar,proto3" json:"download_var,omitempty" pg:"download_var"`
	Location             *Location       `protobuf:"bytes,16,opt,name=location,proto3" json:"location,omitempty" pg:"location"`
	StorageInfo          *StorageInfo    `protobuf:"bytes,17,opt,name=storage_info,json=storageInfo,proto3" json:"storage_info,omitempty" pg:"storage_info"`
	BandwidthInfo        *BandwidthInfo  `protobuf:"bytes,18,opt,name=bandwidth_info,json=bandwidthInfo,proto3" json:"bandwidth_info,omitempty" pg:"bandwidth_info"`
	CollateralInfo       *CollateralInfo `protobuf:"bytes,19,opt,name=collateral_info,json=collateralInfo,proto3" json:"collateral_info,omitempty" pg:"collateral_info"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" pg:"-"`
	XXX_unrecognized     []byte          `json:"-" pg:"-"`
	XXX_sizecache        int32           `json:"-" pg:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{6}
}
func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Host) GetTimeCreate() *time.Time {
	if m != nil {
		return m.TimeCreate
	}
	return nil
}

func (m *Host) GetTimeUpdate() *time.Time {
	if m != nil {
		return m.TimeUpdate
	}
	return nil
}

func (m *Host) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *Host) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Host) GetBtfsVersion() string {
	if m != nil {
		return m.BtfsVersion
	}
	return ""
}

func (m *Host) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Host) GetHeartBeats() int64 {
	if m != nil {
		return m.HeartBeats
	}
	return 0
}

func (m *Host) GetUptime() float32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Host) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Host) GetReputation() float32 {
	if m != nil {
		return m.Reputation
	}
	return 0
}

func (m *Host) GetUploadAvg() float32 {
	if m != nil {
		return m.UploadAvg
	}
	return 0
}

func (m *Host) GetUploadVar() float32 {
	if m != nil {
		return m.UploadVar
	}
	return 0
}

func (m *Host) GetDownloadAvg() float32 {
	if m != nil {
		return m.DownloadAvg
	}
	return 0
}

func (m *Host) GetDownloadVar() float32 {
	if m != nil {
		return m.DownloadVar
	}
	return 0
}

func (m *Host) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Host) GetStorageInfo() *StorageInfo {
	if m != nil {
		return m.StorageInfo
	}
	return nil
}

func (m *Host) GetBandwidthInfo() *BandwidthInfo {
	if m != nil {
		return m.BandwidthInfo
	}
	return nil
}

func (m *Host) GetCollateralInfo() *CollateralInfo {
	if m != nil {
		return m.CollateralInfo
	}
	return nil
}

type Location struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty" pg:"lat"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty" pg:"lon"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{7}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type StorageInfo struct {
	StorageCap           float32  `protobuf:"fixed32,1,opt,name=storage_cap,json=storageCap,proto3" json:"storage_cap,omitempty" pg:"storage_cap"`
	StorageLeft          float32  `protobuf:"fixed32,2,opt,name=storage_left,json=storageLeft,proto3" json:"storage_left,omitempty" pg:"storage_left"`
	StorageMinTime       int64    `protobuf:"varint,3,opt,name=storage_min_time,json=storageMinTime,proto3" json:"storage_min_time,omitempty" pg:"storage_min_time"`
	StorageAskPrice      float32  `protobuf:"fixed32,4,opt,name=storage_ask_price,json=storageAskPrice,proto3" json:"storage_ask_price,omitempty" pg:"storage_ask_price"`
	StoragePriceEst      float32  `protobuf:"fixed32,5,opt,name=storage_price_est,json=storagePriceEst,proto3" json:"storage_price_est,omitempty" pg:"storage_price_est"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *StorageInfo) Reset()         { *m = StorageInfo{} }
func (m *StorageInfo) String() string { return proto.CompactTextString(m) }
func (*StorageInfo) ProtoMessage()    {}
func (*StorageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{8}
}
func (m *StorageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageInfo.Unmarshal(m, b)
}
func (m *StorageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageInfo.Marshal(b, m, deterministic)
}
func (m *StorageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageInfo.Merge(m, src)
}
func (m *StorageInfo) XXX_Size() int {
	return xxx_messageInfo_StorageInfo.Size(m)
}
func (m *StorageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StorageInfo proto.InternalMessageInfo

func (m *StorageInfo) GetStorageCap() float32 {
	if m != nil {
		return m.StorageCap
	}
	return 0
}

func (m *StorageInfo) GetStorageLeft() float32 {
	if m != nil {
		return m.StorageLeft
	}
	return 0
}

func (m *StorageInfo) GetStorageMinTime() int64 {
	if m != nil {
		return m.StorageMinTime
	}
	return 0
}

func (m *StorageInfo) GetStorageAskPrice() float32 {
	if m != nil {
		return m.StorageAskPrice
	}
	return 0
}

func (m *StorageInfo) GetStoragePriceEst() float32 {
	if m != nil {
		return m.StoragePriceEst
	}
	return 0
}

type BandwidthInfo struct {
	BandwidthLimit       float32  `protobuf:"fixed32,1,opt,name=bandwidth_limit,json=bandwidthLimit,proto3" json:"bandwidth_limit,omitempty" pg:"bandwidth_limit"`
	BandwidthAskPrice    float32  `protobuf:"fixed32,2,opt,name=bandwidth_ask_price,json=bandwidthAskPrice,proto3" json:"bandwidth_ask_price,omitempty" pg:"bandwidth_ask_price"`
	BandwidthPriceEst    float32  `protobuf:"fixed32,3,opt,name=bandwidth_price_est,json=bandwidthPriceEst,proto3" json:"bandwidth_price_est,omitempty" pg:"bandwidth_price_est"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *BandwidthInfo) Reset()         { *m = BandwidthInfo{} }
func (m *BandwidthInfo) String() string { return proto.CompactTextString(m) }
func (*BandwidthInfo) ProtoMessage()    {}
func (*BandwidthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{9}
}
func (m *BandwidthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthInfo.Unmarshal(m, b)
}
func (m *BandwidthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthInfo.Marshal(b, m, deterministic)
}
func (m *BandwidthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthInfo.Merge(m, src)
}
func (m *BandwidthInfo) XXX_Size() int {
	return xxx_messageInfo_BandwidthInfo.Size(m)
}
func (m *BandwidthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthInfo proto.InternalMessageInfo

func (m *BandwidthInfo) GetBandwidthLimit() float32 {
	if m != nil {
		return m.BandwidthLimit
	}
	return 0
}

func (m *BandwidthInfo) GetBandwidthAskPrice() float32 {
	if m != nil {
		return m.BandwidthAskPrice
	}
	return 0
}

func (m *BandwidthInfo) GetBandwidthPriceEst() float32 {
	if m != nil {
		return m.BandwidthPriceEst
	}
	return 0
}

type CollateralInfo struct {
	CollateralStake      float32  `protobuf:"fixed32,1,opt,name=collateral_stake,json=collateralStake,proto3" json:"collateral_stake,omitempty" pg:"collateral_stake"`
	CollateralLost       float32  `protobuf:"fixed32,2,opt,name=collateral_lost,json=collateralLost,proto3" json:"collateral_lost,omitempty" pg:"collateral_lost"`
	CollateralBurn       float32  `protobuf:"fixed32,3,opt,name=collateral_burn,json=collateralBurn,proto3" json:"collateral_burn,omitempty" pg:"collateral_burn"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" pg:"-"`
	XXX_unrecognized     []byte   `json:"-" pg:"-"`
	XXX_sizecache        int32    `json:"-" pg:"-"`
}

func (m *CollateralInfo) Reset()         { *m = CollateralInfo{} }
func (m *CollateralInfo) String() string { return proto.CompactTextString(m) }
func (*CollateralInfo) ProtoMessage()    {}
func (*CollateralInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c704b5990190a69f, []int{10}
}
func (m *CollateralInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollateralInfo.Unmarshal(m, b)
}
func (m *CollateralInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollateralInfo.Marshal(b, m, deterministic)
}
func (m *CollateralInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollateralInfo.Merge(m, src)
}
func (m *CollateralInfo) XXX_Size() int {
	return xxx_messageInfo_CollateralInfo.Size(m)
}
func (m *CollateralInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollateralInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollateralInfo proto.InternalMessageInfo

func (m *CollateralInfo) GetCollateralStake() float32 {
	if m != nil {
		return m.CollateralStake
	}
	return 0
}

func (m *CollateralInfo) GetCollateralLost() float32 {
	if m != nil {
		return m.CollateralLost
	}
	return 0
}

func (m *CollateralInfo) GetCollateralBurn() float32 {
	if m != nil {
		return m.CollateralBurn
	}
	return 0
}

func init() {
	proto.RegisterEnum("hub.ResponseCode", ResponseCode_name, ResponseCode_value)
	proto.RegisterType((*SettingsReq)(nil), "hub.SettingsReq")
	proto.RegisterType((*SettingsResp)(nil), "hub.SettingsResp")
	proto.RegisterType((*SettingsData)(nil), "hub.SettingsData")
	proto.RegisterType((*HostsReq)(nil), "hub.HostsReq")
	proto.RegisterType((*HostsResp)(nil), "hub.HostsResp")
	proto.RegisterType((*HostsData)(nil), "hub.HostsData")
	proto.RegisterType((*Host)(nil), "hub.Host")
	proto.RegisterType((*Location)(nil), "hub.Location")
	proto.RegisterType((*StorageInfo)(nil), "hub.StorageInfo")
	proto.RegisterType((*BandwidthInfo)(nil), "hub.BandwidthInfo")
	proto.RegisterType((*CollateralInfo)(nil), "hub.CollateralInfo")
}

func init() { proto.RegisterFile("protos/hub/hub.proto", fileDescriptor_c704b5990190a69f) }

var fileDescriptor_c704b5990190a69f = []byte{
	// 1078 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4d, 0x6f, 0x23, 0x45,
	0x10, 0x65, 0xfc, 0x91, 0xd8, 0x35, 0xb6, 0xe3, 0x74, 0xc2, 0x62, 0x82, 0xd8, 0x18, 0x0b, 0x84,
	0x77, 0x05, 0x8e, 0xe4, 0x95, 0x40, 0x20, 0x84, 0x64, 0x3b, 0x26, 0x89, 0x94, 0x90, 0xa8, 0x9d,
	0xec, 0x81, 0xcb, 0xa8, 0xed, 0x69, 0x3b, 0xa3, 0xd8, 0xd3, 0xb3, 0xd3, 0xed, 0xac, 0xb4, 0xff,
	0x01, 0x89, 0x23, 0xbf, 0x8a, 0x0b, 0x07, 0x8e, 0x5c, 0x11, 0xbf, 0x02, 0x55, 0xcd, 0xa7, 0xb3,
	0x39, 0xb0, 0x88, 0x43, 0xa4, 0xae, 0x57, 0xf5, 0x2a, 0xaf, 0xba, 0x7b, 0x5e, 0x1b, 0xf6, 0x83,
	0x50, 0x19, 0xa5, 0x8f, 0x6e, 0xd7, 0x53, 0xfc, 0xeb, 0x51, 0xc8, 0x8a, 0xb7, 0xeb, 0xe9, 0xc1,
	0x97, 0x0b, 0xcf, 0x20, 0x34, 0x53, 0xab, 0xa3, 0x85, 0x5a, 0xa8, 0x23, 0xca, 0x4d, 0xd7, 0x73,
	0x8a, 0x28, 0xa0, 0x55, 0xc4, 0x39, 0x38, 0x5c, 0x28, 0xb5, 0x58, 0xca, 0xac, 0xca, 0x78, 0x2b,
	0xa9, 0x8d, 0x58, 0x05, 0x51, 0x41, 0xe7, 0x5b, 0xb0, 0x27, 0xd2, 0x18, 0xcf, 0x5f, 0x68, 0x2e,
	0x5f, 0xb1, 0x06, 0x14, 0x3c, 0xb7, 0x65, 0xb5, 0xad, 0x6e, 0x95, 0x17, 0x3c, 0x97, 0x7d, 0x04,
	0xd5, 0x50, 0xea, 0xc0, 0xd1, 0xde, 0x1b, 0xd9, 0x2a, 0xb4, 0xad, 0x6e, 0x99, 0x57, 0x10, 0x98,
	0x78, 0x6f, 0x64, 0xe7, 0x37, 0x0b, 0x6a, 0x19, 0x59, 0x07, 0xec, 0x33, 0x28, 0xcd, 0x94, 0x2b,
	0x89, 0xdf, 0xe8, 0xef, 0xf6, 0x50, 0x28, 0x26, 0x94, 0xaf, 0xe5, 0x48, 0xb9, 0x92, 0x53, 0x9a,
	0xb5, 0x60, 0x7b, 0x25, 0xb5, 0x16, 0x8b, 0xa8, 0x65, 0x95, 0x27, 0x21, 0x1b, 0x43, 0x3d, 0x8c,
	0xeb, 0x1d, 0x54, 0xda, 0x2a, 0xb6, 0xad, 0xae, 0xdd, 0x3f, 0xe8, 0x45, 0x63, 0xf4, 0x92, 0x31,
	0x7a, 0xd7, 0xc9, 0x18, 0xc3, 0xd2, 0x2f, 0x7f, 0x1e, 0x5a, 0xbc, 0x96, 0xd0, 0x30, 0xc1, 0xbe,
	0x82, 0xba, 0x8e, 0x75, 0x39, 0xae, 0x30, 0xa2, 0x55, 0xa2, 0x36, 0x91, 0xa0, 0x44, 0xf1, 0xb1,
	0x30, 0x82, 0xd7, 0x74, 0x2e, 0xea, 0xfc, 0x95, 0x1b, 0x08, 0x01, 0xf6, 0x1c, 0x76, 0xb5, 0x51,
	0xa1, 0x58, 0x48, 0x27, 0x08, 0xbd, 0x99, 0x74, 0x84, 0xbe, 0xa3, 0xe9, 0x2c, 0xbe, 0x13, 0x27,
	0xae, 0x10, 0x1f, 0xe8, 0x3b, 0xd6, 0x83, 0xbd, 0xa9, 0xf0, 0xdd, 0xd7, 0x9e, 0x6b, 0x6e, 0x73,
	0xd5, 0x05, 0xaa, 0xde, 0x4d, 0x53, 0x69, 0x7d, 0x17, 0x9a, 0x49, 0x6f, 0x1c, 0xd5, 0x59, 0x79,
	0x3e, 0x8d, 0x6b, 0xf1, 0x46, 0x8c, 0xe3, 0x2c, 0x17, 0x9e, 0xcf, 0x3e, 0x87, 0x9d, 0xac, 0xf3,
	0xd2, 0x5b, 0x79, 0x86, 0x06, 0xb2, 0x78, 0x23, 0x85, 0xcf, 0x11, 0x65, 0xcf, 0xa0, 0x39, 0x53,
	0xcb, 0xa5, 0x30, 0x32, 0x14, 0x4b, 0x47, 0x1b, 0x71, 0x27, 0x5b, 0xe5, 0x48, 0x6d, 0x86, 0x4f,
	0x10, 0xee, 0x7c, 0x0d, 0x95, 0x53, 0xa5, 0xcd, 0xbb, 0x1f, 0xfa, 0xdf, 0x16, 0x54, 0x63, 0xe6,
	0xff, 0x71, 0xe2, 0x9f, 0x42, 0xf9, 0x16, 0xbb, 0xc5, 0x27, 0xdd, 0xa0, 0x0e, 0xd4, 0x9f, 0xce,
	0x27, 0x4a, 0x6e, 0x2a, 0x2a, 0x6d, 0x2a, 0x62, 0x0c, 0x4a, 0x2b, 0xd4, 0x50, 0xa6, 0xce, 0xb4,
	0x7e, 0xfb, 0x22, 0x6d, 0xfd, 0x97, 0x8b, 0xd4, 0xf9, 0x22, 0x9e, 0x95, 0x2e, 0xc3, 0x61, 0x22,
	0xd5, 0x6a, 0x17, 0xbb, 0x76, 0xbf, 0x9a, 0x4a, 0x8d, 0x55, 0x76, 0xfe, 0x28, 0x43, 0x09, 0x63,
	0xf6, 0x01, 0x6c, 0xfb, 0xca, 0x95, 0x4e, 0xba, 0xab, 0x5b, 0x18, 0x9e, 0xb9, 0x6c, 0x00, 0x36,
	0x9d, 0xf5, 0x2c, 0x94, 0xc2, 0x44, 0x7b, 0xf1, 0x6f, 0x44, 0x01, 0x92, 0x46, 0xc4, 0x49, 0x5b,
	0xac, 0x03, 0x17, 0x5b, 0x14, 0xdf, 0xa5, 0xc5, 0x0d, 0x71, 0x32, 0x79, 0x01, 0xed, 0x65, 0x22,
	0x2f, 0x60, 0x4f, 0x60, 0x2b, 0x94, 0x0b, 0x4f, 0xf9, 0xf1, 0x5e, 0xc6, 0x11, 0xfb, 0x04, 0x6a,
	0x53, 0x33, 0xd7, 0xce, 0xbd, 0x0c, 0x35, 0x66, 0xb7, 0x28, 0x6b, 0x23, 0xf6, 0x32, 0x82, 0xd8,
	0x3e, 0x94, 0xf5, 0x4c, 0x85, 0xb2, 0xb5, 0xdd, 0xb6, 0xba, 0x05, 0x1e, 0x05, 0xec, 0x10, 0xec,
	0x5b, 0x29, 0x42, 0xe3, 0x4c, 0xa5, 0x30, 0xba, 0x55, 0x69, 0x5b, 0xdd, 0x22, 0x07, 0x82, 0x86,
	0x88, 0xe0, 0x7f, 0x5c, 0x07, 0x74, 0x40, 0x55, 0xe2, 0xc5, 0x11, 0x6b, 0x42, 0x11, 0x2f, 0x0b,
	0x10, 0x01, 0x97, 0xec, 0x29, 0x40, 0x28, 0x83, 0xb5, 0x11, 0x06, 0x15, 0xd8, 0x54, 0x9d, 0x43,
	0xd8, 0xc7, 0x00, 0xeb, 0x60, 0xa9, 0x84, 0xeb, 0x88, 0xfb, 0x45, 0xab, 0x46, 0xf9, 0x6a, 0x84,
	0x0c, 0xee, 0x17, 0xb9, 0xf4, 0xbd, 0x08, 0x5b, 0xf5, 0x7c, 0xfa, 0xa5, 0x08, 0x71, 0x42, 0x57,
	0xbd, 0xf6, 0x53, 0x7e, 0x83, 0x0a, 0xec, 0x04, 0xc3, 0x0e, 0xf9, 0x12, 0xec, 0xb1, 0xb3, 0x59,
	0x82, 0x5d, 0x9e, 0x41, 0x65, 0xa9, 0x66, 0x91, 0xc2, 0x26, 0x1d, 0x4c, 0x9d, 0x2e, 0xc9, 0x79,
	0x0c, 0xf2, 0x34, 0xcd, 0x5e, 0x40, 0x2d, 0xf9, 0xfa, 0x3d, 0x7f, 0xae, 0x5a, 0xbb, 0x54, 0xde,
	0x8c, 0x1c, 0x2a, 0x4a, 0x9c, 0xf9, 0x73, 0xc5, 0x6d, 0x9d, 0x05, 0xec, 0x1b, 0xc8, 0xbe, 0xf8,
	0x88, 0xc6, 0x88, 0xc6, 0x88, 0x36, 0x4c, 0x52, 0x44, 0xac, 0x4f, 0xf3, 0x21, 0xfb, 0x0e, 0x72,
	0x16, 0x10, 0x71, 0xf7, 0x88, 0xbb, 0x47, 0xdc, 0x51, 0x9a, 0x23, 0x72, 0x63, 0xb6, 0x11, 0x77,
	0x7a, 0x50, 0x49, 0x66, 0xc0, 0xa3, 0x59, 0x0a, 0x13, 0xbb, 0x20, 0x2e, 0x09, 0x51, 0x7e, 0xec,
	0x74, 0xb8, 0xec, 0xfc, 0x6e, 0x81, 0x9d, 0x9b, 0x02, 0xef, 0x41, 0x32, 0xed, 0x4c, 0x04, 0xc4,
	0x2d, 0x70, 0x88, 0xa1, 0x91, 0x08, 0x70, 0x73, 0x93, 0x82, 0xa5, 0x9c, 0x1b, 0xea, 0x55, 0x48,
	0x87, 0x3f, 0x97, 0x73, 0x93, 0xf7, 0xcb, 0x95, 0xe7, 0x67, 0xcf, 0x43, 0x31, 0xf5, 0xcb, 0x0b,
	0xcf, 0x27, 0xfb, 0xcf, 0xb9, 0xb6, 0xd0, 0x77, 0x91, 0x17, 0xd3, 0x4d, 0x2f, 0xa4, 0xae, 0x3d,
	0xd0, 0x77, 0x64, 0xc4, 0x6f, 0x3b, 0xbc, 0xd4, 0x86, 0x6e, 0x7f, 0x61, 0xd3, 0xe1, 0xc7, 0xda,
	0x74, 0x7e, 0xb5, 0xa0, 0xbe, 0xb1, 0xc9, 0x8f, 0x39, 0x73, 0x34, 0xdb, 0x43, 0x67, 0xde, 0x78,
	0x1c, 0x32, 0x51, 0xd1, 0x98, 0xd9, 0xe3, 0x90, 0xca, 0x7a, 0xe4, 0x31, 0x41, 0x61, 0xc5, 0x07,
	0xf5, 0xa9, 0xb4, 0x9f, 0x2d, 0x68, 0x6c, 0x9e, 0xe1, 0xa3, 0x8f, 0x41, 0x24, 0xee, 0xe1, 0x63,
	0x80, 0x63, 0xe4, 0x4a, 0x97, 0x4a, 0x27, 0x07, 0x90, 0xbb, 0x07, 0xe7, 0x68, 0x6c, 0x9b, 0x85,
	0xd3, 0x75, 0xe8, 0xc7, 0x92, 0x72, 0x85, 0xc3, 0x75, 0xe8, 0x3f, 0x9f, 0x41, 0x2d, 0xff, 0x0c,
	0x30, 0x1b, 0xb6, 0x27, 0x37, 0xa3, 0xd1, 0x78, 0x32, 0x69, 0xbe, 0xc7, 0x0e, 0xe0, 0xc9, 0xe4,
	0xec, 0xe4, 0xc7, 0xc1, 0xf5, 0x0d, 0x1f, 0x3b, 0x3f, 0x5c, 0xf2, 0x8b, 0xc1, 0xb5, 0x33, 0xe6,
	0xfc, 0x92, 0x37, 0x2d, 0xf6, 0x21, 0xbc, 0x3f, 0xba, 0xbc, 0xb8, 0xba, 0xb9, 0x1e, 0x3b, 0x83,
	0xe3, 0x63, 0x3e, 0x9e, 0x4c, 0xe2, 0x54, 0x81, 0xed, 0x80, 0x7d, 0x79, 0x7d, 0x3a, 0xe6, 0x31,
	0xb0, 0xdf, 0xff, 0x1e, 0x2a, 0xc9, 0x6b, 0xcd, 0xfa, 0x60, 0x9f, 0x48, 0x93, 0x86, 0xcd, 0x8d,
	0xa7, 0x9e, 0xcb, 0x57, 0x07, 0xbb, 0x0f, 0x10, 0x1d, 0xf4, 0xfb, 0x50, 0x26, 0x77, 0xc7, 0xef,
	0xf6, 0x44, 0x9a, 0x68, 0x5d, 0xcf, 0x5e, 0x20, 0xa4, 0x35, 0xf2, 0xa1, 0x0e, 0x86, 0x4f, 0xc1,
	0xf6, 0x54, 0x0f, 0x9d, 0x0f, 0x13, 0xc3, 0xca, 0xe9, 0x7a, 0x7a, 0x85, 0x9e, 0x7b, 0x65, 0xfd,
	0x84, 0xbf, 0xcf, 0xa6, 0x5b, 0xe4, 0xc0, 0x2f, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xa0,
	0x1c, 0x4e, 0xc3, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SettingsClient is the client API for Settings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SettingsClient interface {
	GetSettings(ctx context.Context, in *SettingsReq, opts ...grpc.CallOption) (*SettingsResp, error)
}

type settingsClient struct {
	cc *grpc.ClientConn
}

func NewSettingsClient(cc *grpc.ClientConn) SettingsClient {
	return &settingsClient{cc}
}

func (c *settingsClient) GetSettings(ctx context.Context, in *SettingsReq, opts ...grpc.CallOption) (*SettingsResp, error) {
	out := new(SettingsResp)
	err := c.cc.Invoke(ctx, "/hub.Settings/GetSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SettingsServer is the server API for Settings service.
type SettingsServer interface {
	GetSettings(context.Context, *SettingsReq) (*SettingsResp, error)
}

// UnimplementedSettingsServer can be embedded to have forward compatible implementations.
type UnimplementedSettingsServer struct {
}

func (*UnimplementedSettingsServer) GetSettings(ctx context.Context, req *SettingsReq) (*SettingsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSettings not implemented")
}

func RegisterSettingsServer(s *grpc.Server, srv SettingsServer) {
	s.RegisterService(&_Settings_serviceDesc, srv)
}

func _Settings_GetSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SettingsServer).GetSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hub.Settings/GetSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SettingsServer).GetSettings(ctx, req.(*SettingsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Settings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hub.Settings",
	HandlerType: (*SettingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSettings",
			Handler:    _Settings_GetSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/hub/hub.proto",
}

// HostsClient is the client API for Hosts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HostsClient interface {
	GetHosts(ctx context.Context, in *HostsReq, opts ...grpc.CallOption) (*HostsResp, error)
}

type hostsClient struct {
	cc *grpc.ClientConn
}

func NewHostsClient(cc *grpc.ClientConn) HostsClient {
	return &hostsClient{cc}
}

func (c *hostsClient) GetHosts(ctx context.Context, in *HostsReq, opts ...grpc.CallOption) (*HostsResp, error) {
	out := new(HostsResp)
	err := c.cc.Invoke(ctx, "/hub.Hosts/GetHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HostsServer is the server API for Hosts service.
type HostsServer interface {
	GetHosts(context.Context, *HostsReq) (*HostsResp, error)
}

// UnimplementedHostsServer can be embedded to have forward compatible implementations.
type UnimplementedHostsServer struct {
}

func (*UnimplementedHostsServer) GetHosts(ctx context.Context, req *HostsReq) (*HostsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHosts not implemented")
}

func RegisterHostsServer(s *grpc.Server, srv HostsServer) {
	s.RegisterService(&_Hosts_serviceDesc, srv)
}

func _Hosts_GetHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostsServer).GetHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hub.Hosts/GetHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostsServer).GetHosts(ctx, req.(*HostsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hosts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hub.Hosts",
	HandlerType: (*HostsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHosts",
			Handler:    _Hosts_GetHosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/hub/hub.proto",
}
