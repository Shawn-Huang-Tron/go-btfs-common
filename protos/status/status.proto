syntax = "proto3";

package status;

// gogo plugin toggles
option (gogoproto.gogoproto_import) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.messagename_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
// golang option
option go_package = "status";
// java options
option java_multiple_files = true;
option java_outer_classname = "StatusProto";
option java_package = "io.btfs.status";

import "github.com/tron-us/go-btfs-common/protos/node/node.proto";
import "github.com/tron-us/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service StatusService {
  rpc UpdateMetrics(SignedMetrics) returns (google.protobuf.Empty);
  rpc UpdateMetricsAndDiscovery(SignedMetrics) returns (google.protobuf.Empty);
  rpc UpdateMetricsAggregation(NodeMetricsAggrReq) returns (google.protobuf.Empty);
  rpc UpdateDiscoveryAggregation(NodeDiscoveryAggrReq) returns (google.protobuf.Empty);
  rpc UpdateBtfsScanAggr(BtfsScanAggrReq) returns (google.protobuf.Empty);
  rpc UpdateScoreHistory(ScoreHistoryReq) returns (google.protobuf.Empty);
  rpc UpdateAirdropRewardHistory(AirdropRewardHistoryReq) returns (AirdropRewardHistoryResp);
}

message SignedMetrics {
  bytes public_key = 1;
  bytes signature = 2;
  bytes payload = 3;
}

message NodeMetricsAggrReq {
  string source = 1;
}

message NodeDiscoveryAggrReq {
  string source = 1;
}

message BtfsScanAggrReq {
  string table_name = 1;
  double storage_volume_left = 2;
  uint32 online_miners_number = 3;
  map<string, int32> country_distribute = 4;
  map<string, int32> score_distribute = 5;
  google.protobuf.Timestamp time_created = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  double storage_already_used = 7;
  double price = 8;
  google.protobuf.Timestamp date_created = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  string new_rank = 10;
  string total_rank = 11;
}

message ScoreHistoryReq {
  repeated node.ScoreHistoryTab scores = 1;
}

enum RewardType {
  FILESIZE = 0;
  REPAIR = 1;
}

message RewardInfo {
  RewardType type = 1;
  string node_id = 2;
  uint64 reward = 3;
  bool is_suspect = 4;
  uint32 weight = 5;
  uint32 stake = 6;
}

message AirdropRewardHistoryReq {
  repeated RewardInfo rewards = 1;
  uint32 page_num = 2;
  uint32 total = 3;
  google.protobuf.Timestamp date_created = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

message AirdropRewardHistoryResp {
  int32 code = 1;
  string message = 2;
  google.protobuf.Timestamp response_time = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}
