// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/node/node.proto

package nodepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	NodeId               string               `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BtfsVersion          string               `protobuf:"bytes,2,opt,name=btfs_version,json=btfsVersion,proto3" json:"btfs_version,omitempty"`
	UpTime               uint64               `protobuf:"varint,3,opt,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
	StorageUsed          uint64               `protobuf:"varint,4,opt,name=storage_used,json=storageUsed,proto3" json:"storage_used,omitempty"`
	StorageVolumeCap     uint64               `protobuf:"varint,5,opt,name=storage_volume_cap,json=storageVolumeCap,proto3" json:"storage_volume_cap,omitempty"`
	MemoryUsed           uint64               `protobuf:"varint,6,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	CpuUsed              float64              `protobuf:"fixed64,7,opt,name=cpu_used,json=cpuUsed,proto3" json:"cpu_used,omitempty"`
	Upload               uint64               `protobuf:"varint,8,opt,name=upload,proto3" json:"upload,omitempty"`
	Download             uint64               `protobuf:"varint,9,opt,name=download,proto3" json:"download,omitempty"`
	TotalUpload          uint64               `protobuf:"varint,10,opt,name=total_upload,json=totalUpload,proto3" json:"total_upload,omitempty"`
	TotalDownload        uint64               `protobuf:"varint,11,opt,name=total_download,json=totalDownload,proto3" json:"total_download,omitempty"`
	StoragePriceDeal     uint64               `protobuf:"varint,12,opt,name=storage_price_deal,json=storagePriceDeal,proto3" json:"storage_price_deal,omitempty"`
	BandwidthPriceDeal   uint64               `protobuf:"varint,13,opt,name=bandwidth_price_deal,json=bandwidthPriceDeal,proto3" json:"bandwidth_price_deal,omitempty"`
	Settings             *Node_Settings       `protobuf:"bytes,14,opt,name=settings,proto3" json:"settings,omitempty"`
	TimeCreated          *timestamp.Timestamp `protobuf:"bytes,15,opt,name=time_created,json=timeCreated,proto3" json:"time_created,omitempty"`
	Reputation           float64              `protobuf:"fixed64,16,opt,name=reputation,proto3" json:"reputation,omitempty"`
	BlocksUp             uint64               `protobuf:"varint,17,opt,name=blocks_up,json=blocksUp,proto3" json:"blocks_up,omitempty"`
	BlocksDown           uint64               `protobuf:"varint,18,opt,name=blocks_down,json=blocksDown,proto3" json:"blocks_down,omitempty"`
	OsType               string               `protobuf:"bytes,19,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`
	ArchType             string               `protobuf:"bytes,20,opt,name=arch_type,json=archType,proto3" json:"arch_type,omitempty"`
	CpuInfo              string               `protobuf:"bytes,21,opt,name=cpu_info,json=cpuInfo,proto3" json:"cpu_info,omitempty"`
	NodeIp               string               `protobuf:"bytes,22,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	PeersConnected       uint64               `protobuf:"varint,23,opt,name=peers_connected,json=peersConnected,proto3" json:"peers_connected,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_35f8e1f5ec2240a2, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Node) GetBtfsVersion() string {
	if m != nil {
		return m.BtfsVersion
	}
	return ""
}

func (m *Node) GetUpTime() uint64 {
	if m != nil {
		return m.UpTime
	}
	return 0
}

func (m *Node) GetStorageUsed() uint64 {
	if m != nil {
		return m.StorageUsed
	}
	return 0
}

func (m *Node) GetStorageVolumeCap() uint64 {
	if m != nil {
		return m.StorageVolumeCap
	}
	return 0
}

func (m *Node) GetMemoryUsed() uint64 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *Node) GetCpuUsed() float64 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *Node) GetUpload() uint64 {
	if m != nil {
		return m.Upload
	}
	return 0
}

func (m *Node) GetDownload() uint64 {
	if m != nil {
		return m.Download
	}
	return 0
}

func (m *Node) GetTotalUpload() uint64 {
	if m != nil {
		return m.TotalUpload
	}
	return 0
}

func (m *Node) GetTotalDownload() uint64 {
	if m != nil {
		return m.TotalDownload
	}
	return 0
}

func (m *Node) GetStoragePriceDeal() uint64 {
	if m != nil {
		return m.StoragePriceDeal
	}
	return 0
}

func (m *Node) GetBandwidthPriceDeal() uint64 {
	if m != nil {
		return m.BandwidthPriceDeal
	}
	return 0
}

func (m *Node) GetSettings() *Node_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *Node) GetTimeCreated() *timestamp.Timestamp {
	if m != nil {
		return m.TimeCreated
	}
	return nil
}

func (m *Node) GetReputation() float64 {
	if m != nil {
		return m.Reputation
	}
	return 0
}

func (m *Node) GetBlocksUp() uint64 {
	if m != nil {
		return m.BlocksUp
	}
	return 0
}

func (m *Node) GetBlocksDown() uint64 {
	if m != nil {
		return m.BlocksDown
	}
	return 0
}

func (m *Node) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

func (m *Node) GetArchType() string {
	if m != nil {
		return m.ArchType
	}
	return ""
}

func (m *Node) GetCpuInfo() string {
	if m != nil {
		return m.CpuInfo
	}
	return ""
}

func (m *Node) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *Node) GetPeersConnected() uint64 {
	if m != nil {
		return m.PeersConnected
	}
	return 0
}

type Node_Settings struct {
	StoragePriceAsk      uint64   `protobuf:"varint,1,opt,name=storage_price_ask,json=storagePriceAsk,proto3" json:"storage_price_ask,omitempty"`
	BandwidthPriceAsk    uint64   `protobuf:"varint,2,opt,name=bandwidth_price_ask,json=bandwidthPriceAsk,proto3" json:"bandwidth_price_ask,omitempty"`
	StorageTimeMin       uint64   `protobuf:"varint,3,opt,name=storage_time_min,json=storageTimeMin,proto3" json:"storage_time_min,omitempty"`
	BandwidthLimit       float64  `protobuf:"fixed64,4,opt,name=bandwidth_limit,json=bandwidthLimit,proto3" json:"bandwidth_limit,omitempty"`
	CollateralStake      uint64   `protobuf:"varint,5,opt,name=collateral_stake,json=collateralStake,proto3" json:"collateral_stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node_Settings) Reset()         { *m = Node_Settings{} }
func (m *Node_Settings) String() string { return proto.CompactTextString(m) }
func (*Node_Settings) ProtoMessage()    {}
func (*Node_Settings) Descriptor() ([]byte, []int) {
	return fileDescriptor_35f8e1f5ec2240a2, []int{0, 0}
}

func (m *Node_Settings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node_Settings.Unmarshal(m, b)
}
func (m *Node_Settings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node_Settings.Marshal(b, m, deterministic)
}
func (m *Node_Settings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node_Settings.Merge(m, src)
}
func (m *Node_Settings) XXX_Size() int {
	return xxx_messageInfo_Node_Settings.Size(m)
}
func (m *Node_Settings) XXX_DiscardUnknown() {
	xxx_messageInfo_Node_Settings.DiscardUnknown(m)
}

var xxx_messageInfo_Node_Settings proto.InternalMessageInfo

func (m *Node_Settings) GetStoragePriceAsk() uint64 {
	if m != nil {
		return m.StoragePriceAsk
	}
	return 0
}

func (m *Node_Settings) GetBandwidthPriceAsk() uint64 {
	if m != nil {
		return m.BandwidthPriceAsk
	}
	return 0
}

func (m *Node_Settings) GetStorageTimeMin() uint64 {
	if m != nil {
		return m.StorageTimeMin
	}
	return 0
}

func (m *Node_Settings) GetBandwidthLimit() float64 {
	if m != nil {
		return m.BandwidthLimit
	}
	return 0
}

func (m *Node_Settings) GetCollateralStake() uint64 {
	if m != nil {
		return m.CollateralStake
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "node.Node")
	proto.RegisterType((*Node_Settings)(nil), "node.Node.Settings")
}

func init() { proto.RegisterFile("protos/node/node.proto", fileDescriptor_35f8e1f5ec2240a2) }

var fileDescriptor_35f8e1f5ec2240a2 = []byte{
	// 623 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x53, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x55, 0xf6, 0xeb, 0xaf, 0x4b, 0xdd, 0xae, 0xdd, 0xbc, 0xb1, 0x99, 0x22, 0xb1, 0x02, 0x42,
	0x14, 0x84, 0x52, 0x04, 0xcf, 0x3c, 0xb0, 0xed, 0x65, 0x12, 0xa0, 0x29, 0xfb, 0xf3, 0xc0, 0x8b,
	0xe5, 0x24, 0x6e, 0x67, 0x35, 0x89, 0xad, 0xd8, 0xd9, 0xb4, 0x2f, 0xc1, 0xa7, 0xe4, 0x83, 0xa0,
	0x7b, 0x9d, 0xf4, 0x0f, 0x2f, 0x51, 0x7c, 0xce, 0xb9, 0x57, 0xf6, 0x3d, 0xe7, 0x92, 0x63, 0x53,
	0x69, 0xa7, 0xed, 0xac, 0xd4, 0x99, 0xc4, 0x4f, 0x84, 0x00, 0xed, 0xc0, 0xff, 0xf8, 0x74, 0xa1,
	0xf5, 0x22, 0x97, 0x33, 0xc4, 0x92, 0x7a, 0x3e, 0x73, 0xaa, 0x90, 0xd6, 0x89, 0xc2, 0x78, 0xd9,
	0xeb, 0xdf, 0x21, 0xe9, 0xfc, 0xd4, 0x99, 0xa4, 0x27, 0x64, 0x17, 0x2a, 0xb8, 0xca, 0x58, 0x30,
	0x09, 0xa6, 0xbd, 0xb8, 0x0b, 0xc7, 0xcb, 0x8c, 0xbe, 0x22, 0x83, 0xc4, 0xcd, 0x2d, 0x7f, 0x90,
	0x95, 0x55, 0xba, 0x64, 0x3b, 0xc8, 0xf6, 0x01, 0xbb, 0xf3, 0x10, 0xd4, 0xd6, 0x86, 0x43, 0x6b,
	0xf6, 0xdf, 0x24, 0x98, 0x76, 0xe2, 0x6e, 0x6d, 0x6e, 0x54, 0x21, 0xa1, 0xd6, 0x3a, 0x5d, 0x89,
	0x85, 0xe4, 0xb5, 0x95, 0x19, 0xeb, 0x20, 0xdb, 0x6f, 0xb0, 0x5b, 0x2b, 0x33, 0xfa, 0x91, 0xd0,
	0x56, 0xf2, 0xa0, 0xf3, 0xba, 0x90, 0x3c, 0x15, 0x86, 0xfd, 0x8f, 0xc2, 0xfd, 0x86, 0xb9, 0x43,
	0xe2, 0x5c, 0x18, 0x7a, 0x4a, 0xfa, 0x85, 0x2c, 0x74, 0xf5, 0xe4, 0xfb, 0x75, 0x51, 0x46, 0x3c,
	0x84, 0xed, 0x9e, 0x93, 0x30, 0x35, 0xb5, 0x67, 0x77, 0x27, 0xc1, 0x34, 0x88, 0x77, 0x53, 0x53,
	0x23, 0x75, 0x4c, 0xba, 0xb5, 0xc9, 0xb5, 0xc8, 0x58, 0xd8, 0x5e, 0x12, 0x4e, 0x74, 0x4c, 0xc2,
	0x4c, 0x3f, 0x96, 0xc8, 0xf4, 0x90, 0x59, 0x9d, 0xe1, 0x01, 0x4e, 0x3b, 0x91, 0xf3, 0xa6, 0x92,
	0xf8, 0x07, 0x20, 0x76, 0xeb, 0xcb, 0xdf, 0x92, 0xa1, 0x97, 0xac, 0x9a, 0xf4, 0x51, 0xb4, 0x87,
	0xe8, 0x45, 0xdb, 0x69, 0xe3, 0x9d, 0xa6, 0x52, 0xa9, 0xe4, 0x99, 0x14, 0x39, 0x1b, 0x6c, 0xbd,
	0xf3, 0x0a, 0x88, 0x0b, 0x29, 0x72, 0xfa, 0x89, 0x1c, 0x25, 0xa2, 0xcc, 0x1e, 0x55, 0xe6, 0xee,
	0x37, 0xf5, 0x7b, 0xa8, 0xa7, 0x2b, 0x6e, 0x5d, 0x31, 0x23, 0xa1, 0x95, 0xce, 0xa9, 0x72, 0x61,
	0xd9, 0x70, 0x12, 0x4c, 0xfb, 0x9f, 0x0f, 0x23, 0x8c, 0x03, 0xb8, 0x1b, 0x5d, 0x37, 0x54, 0xbc,
	0x12, 0xd1, 0xaf, 0x64, 0x00, 0x8e, 0xf1, 0xb4, 0x92, 0xc2, 0xc9, 0x8c, 0x8d, 0xb0, 0x68, 0x1c,
	0xf9, 0xc4, 0x44, 0x6d, 0x62, 0xa2, 0x9b, 0x36, 0x31, 0x71, 0x1f, 0xf4, 0xe7, 0x5e, 0x4e, 0x5f,
	0x12, 0x52, 0x49, 0x53, 0x3b, 0xe1, 0x20, 0x14, 0xfb, 0x38, 0xea, 0x0d, 0x84, 0xbe, 0x20, 0xbd,
	0x24, 0xd7, 0xe9, 0xd2, 0xf2, 0xda, 0xb0, 0x03, 0x3f, 0x56, 0x0f, 0xdc, 0xa2, 0x8d, 0x0d, 0x09,
	0x43, 0x63, 0xd4, 0xdb, 0xe8, 0x21, 0x98, 0x18, 0x24, 0x4a, 0x5b, 0xee, 0x9e, 0x8c, 0x64, 0x87,
	0x3e, 0x8d, 0xda, 0xde, 0x3c, 0x19, 0x09, 0x6d, 0x45, 0x95, 0xde, 0x7b, 0xea, 0x08, 0xa9, 0x10,
	0x00, 0x24, 0x1b, 0xf3, 0x55, 0x39, 0xd7, 0xec, 0x19, 0x72, 0x60, 0xfe, 0x65, 0x39, 0xd7, 0xeb,
	0x78, 0x1b, 0x76, 0xbc, 0x11, 0x6f, 0x43, 0xdf, 0x91, 0x91, 0x91, 0xb2, 0xb2, 0x3c, 0xd5, 0x65,
	0x29, 0x53, 0x98, 0xc4, 0x09, 0x5e, 0x67, 0x88, 0xf0, 0x79, 0x8b, 0x8e, 0xff, 0x04, 0x24, 0x6c,
	0xc7, 0x48, 0x3f, 0x90, 0x83, 0x6d, 0x37, 0x85, 0x5d, 0xe2, 0xde, 0x74, 0xe2, 0xd1, 0xa6, 0x99,
	0xdf, 0xec, 0x92, 0x46, 0xe4, 0xf0, 0x5f, 0x2f, 0x41, 0xbd, 0x83, 0xea, 0x83, 0x6d, 0x2b, 0x41,
	0x3f, 0x25, 0x6d, 0x1e, 0x70, 0xa5, 0x78, 0xa1, 0xca, 0x66, 0xad, 0x86, 0x0d, 0x0e, 0x96, 0xfc,
	0x50, 0x25, 0xdc, 0x7d, 0xdd, 0x39, 0x57, 0x85, 0x72, 0xb8, 0x61, 0x41, 0x3c, 0x5c, 0xc1, 0xdf,
	0x01, 0xa5, 0xef, 0xc9, 0x7e, 0xaa, 0xf3, 0x5c, 0x38, 0x59, 0x89, 0x9c, 0x5b, 0x27, 0x96, 0xb2,
	0x59, 0xb1, 0xd1, 0x1a, 0xbf, 0x06, 0xf8, 0xec, 0x0d, 0x19, 0x28, 0x1d, 0xc1, 0x76, 0x63, 0x7c,
	0xce, 0x7a, 0x90, 0x9f, 0x2b, 0x08, 0xc3, 0x55, 0xf0, 0x0b, 0x87, 0x66, 0x92, 0xa4, 0x8b, 0xe9,
	0xf8, 0xf2, 0x37, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xf0, 0x05, 0xa9, 0x7d, 0x04, 0x00, 0x00,
}
