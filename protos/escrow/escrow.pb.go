// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protos/escrow/escrow.proto

package escrowpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TokenType int32

const (
	TokenType_BTT TokenType = 0
)

var TokenType_name = map[int32]string{
	0: "BTT",
}

var TokenType_value = map[string]int32{
	"BTT": 0,
}

func (x TokenType) String() string {
	return proto.EnumName(TokenType_name, int32(x))
}

func (TokenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{0}
}

type Schedule int32

const (
	Schedule_MONTHLY   Schedule = 0
	Schedule_QUARTERLY Schedule = 1
	Schedule_ANNUALLY  Schedule = 2
)

var Schedule_name = map[int32]string{
	0: "MONTHLY",
	1: "QUARTERLY",
	2: "ANNUALLY",
}

var Schedule_value = map[string]int32{
	"MONTHLY":   0,
	"QUARTERLY": 1,
	"ANNUALLY":  2,
}

func (x Schedule) String() string {
	return proto.EnumName(Schedule_name, int32(x))
}

func (Schedule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{1}
}

type EscrowStatus int32

const (
	EscrowStatus_INITIATED EscrowStatus = 0
	EscrowStatus_ACTIVE    EscrowStatus = 1
	EscrowStatus_CANCELED  EscrowStatus = 2
	EscrowStatus_CLOSED    EscrowStatus = 3
)

var EscrowStatus_name = map[int32]string{
	0: "INITIATED",
	1: "ACTIVE",
	2: "CANCELED",
	3: "CLOSED",
}

var EscrowStatus_value = map[string]int32{
	"INITIATED": 0,
	"ACTIVE":    1,
	"CANCELED":  2,
	"CLOSED":    3,
}

func (x EscrowStatus) String() string {
	return proto.EnumName(EscrowStatus_name, int32(x))
}

func (EscrowStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{2}
}

type ContractID struct {
	ContractId           []byte   `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Address              []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractID) Reset()         { *m = ContractID{} }
func (m *ContractID) String() string { return proto.CompactTextString(m) }
func (*ContractID) ProtoMessage()    {}
func (*ContractID) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{0}
}
func (m *ContractID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractID.Unmarshal(m, b)
}
func (m *ContractID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractID.Marshal(b, m, deterministic)
}
func (m *ContractID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractID.Merge(m, src)
}
func (m *ContractID) XXX_Size() int {
	return xxx_messageInfo_ContractID.Size(m)
}
func (m *ContractID) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractID.DiscardUnknown(m)
}

var xxx_messageInfo_ContractID proto.InternalMessageInfo

func (m *ContractID) GetContractId() []byte {
	if m != nil {
		return m.ContractId
	}
	return nil
}

func (m *ContractID) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ContractID) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type EscrowContract struct {
	ContractId           []byte    `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	BuyerAddress         []byte    `protobuf:"bytes,2,opt,name=buyer_address,json=buyerAddress,proto3" json:"buyer_address,omitempty"`
	SellerAddress        []byte    `protobuf:"bytes,3,opt,name=seller_address,json=sellerAddress,proto3" json:"seller_address,omitempty"`
	AuthAddress          []byte    `protobuf:"bytes,4,opt,name=auth_address,json=authAddress,proto3" json:"auth_address,omitempty"`
	Amount               int64     `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	CollateralAmount     int64     `protobuf:"varint,6,opt,name=collateral_amount,json=collateralAmount,proto3" json:"collateral_amount,omitempty"`
	WithholdAmount       int64     `protobuf:"varint,7,opt,name=withhold_amount,json=withholdAmount,proto3" json:"withhold_amount,omitempty"`
	TokenType            TokenType `protobuf:"varint,8,opt,name=token_type,json=tokenType,proto3,enum=escrow.TokenType" json:"token_type,omitempty"`
	PayoutSchedule       Schedule  `protobuf:"varint,9,opt,name=payout_schedule,json=payoutSchedule,proto3,enum=escrow.Schedule" json:"payout_schedule,omitempty"`
	NumPayouts           int32     `protobuf:"varint,10,opt,name=num_payouts,json=numPayouts,proto3" json:"num_payouts,omitempty"`
	Reference            []byte    `protobuf:"bytes,11,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EscrowContract) Reset()         { *m = EscrowContract{} }
func (m *EscrowContract) String() string { return proto.CompactTextString(m) }
func (*EscrowContract) ProtoMessage()    {}
func (*EscrowContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{1}
}
func (m *EscrowContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscrowContract.Unmarshal(m, b)
}
func (m *EscrowContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscrowContract.Marshal(b, m, deterministic)
}
func (m *EscrowContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscrowContract.Merge(m, src)
}
func (m *EscrowContract) XXX_Size() int {
	return xxx_messageInfo_EscrowContract.Size(m)
}
func (m *EscrowContract) XXX_DiscardUnknown() {
	xxx_messageInfo_EscrowContract.DiscardUnknown(m)
}

var xxx_messageInfo_EscrowContract proto.InternalMessageInfo

func (m *EscrowContract) GetContractId() []byte {
	if m != nil {
		return m.ContractId
	}
	return nil
}

func (m *EscrowContract) GetBuyerAddress() []byte {
	if m != nil {
		return m.BuyerAddress
	}
	return nil
}

func (m *EscrowContract) GetSellerAddress() []byte {
	if m != nil {
		return m.SellerAddress
	}
	return nil
}

func (m *EscrowContract) GetAuthAddress() []byte {
	if m != nil {
		return m.AuthAddress
	}
	return nil
}

func (m *EscrowContract) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EscrowContract) GetCollateralAmount() int64 {
	if m != nil {
		return m.CollateralAmount
	}
	return 0
}

func (m *EscrowContract) GetWithholdAmount() int64 {
	if m != nil {
		return m.WithholdAmount
	}
	return 0
}

func (m *EscrowContract) GetTokenType() TokenType {
	if m != nil {
		return m.TokenType
	}
	return TokenType_BTT
}

func (m *EscrowContract) GetPayoutSchedule() Schedule {
	if m != nil {
		return m.PayoutSchedule
	}
	return Schedule_MONTHLY
}

func (m *EscrowContract) GetNumPayouts() int32 {
	if m != nil {
		return m.NumPayouts
	}
	return 0
}

func (m *EscrowContract) GetReference() []byte {
	if m != nil {
		return m.Reference
	}
	return nil
}

type SignedEscrowContract struct {
	Contract             *EscrowContract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	BuyerSignature       []byte          `protobuf:"bytes,2,opt,name=buyer_signature,json=buyerSignature,proto3" json:"buyer_signature,omitempty"`
	SellerSignature      []byte          `protobuf:"bytes,3,opt,name=seller_signature,json=sellerSignature,proto3" json:"seller_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SignedEscrowContract) Reset()         { *m = SignedEscrowContract{} }
func (m *SignedEscrowContract) String() string { return proto.CompactTextString(m) }
func (*SignedEscrowContract) ProtoMessage()    {}
func (*SignedEscrowContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{2}
}
func (m *SignedEscrowContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedEscrowContract.Unmarshal(m, b)
}
func (m *SignedEscrowContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedEscrowContract.Marshal(b, m, deterministic)
}
func (m *SignedEscrowContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedEscrowContract.Merge(m, src)
}
func (m *SignedEscrowContract) XXX_Size() int {
	return xxx_messageInfo_SignedEscrowContract.Size(m)
}
func (m *SignedEscrowContract) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedEscrowContract.DiscardUnknown(m)
}

var xxx_messageInfo_SignedEscrowContract proto.InternalMessageInfo

func (m *SignedEscrowContract) GetContract() *EscrowContract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *SignedEscrowContract) GetBuyerSignature() []byte {
	if m != nil {
		return m.BuyerSignature
	}
	return nil
}

func (m *SignedEscrowContract) GetSellerSignature() []byte {
	if m != nil {
		return m.SellerSignature
	}
	return nil
}

type EscrowContractRequest struct {
	Contract             []*SignedEscrowContract `protobuf:"bytes,1,rep,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *EscrowContractRequest) Reset()         { *m = EscrowContractRequest{} }
func (m *EscrowContractRequest) String() string { return proto.CompactTextString(m) }
func (*EscrowContractRequest) ProtoMessage()    {}
func (*EscrowContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{3}
}
func (m *EscrowContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscrowContractRequest.Unmarshal(m, b)
}
func (m *EscrowContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscrowContractRequest.Marshal(b, m, deterministic)
}
func (m *EscrowContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscrowContractRequest.Merge(m, src)
}
func (m *EscrowContractRequest) XXX_Size() int {
	return xxx_messageInfo_EscrowContractRequest.Size(m)
}
func (m *EscrowContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EscrowContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EscrowContractRequest proto.InternalMessageInfo

func (m *EscrowContractRequest) GetContract() []*SignedEscrowContract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type Escrow struct {
	ContractId           []byte   `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	EscrowId             int64    `protobuf:"varint,2,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	FromAddress          []byte   `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress            []byte   `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount               int64    `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	CollateralAmount     int64    `protobuf:"varint,6,opt,name=collateral_amount,json=collateralAmount,proto3" json:"collateral_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Escrow) Reset()         { *m = Escrow{} }
func (m *Escrow) String() string { return proto.CompactTextString(m) }
func (*Escrow) ProtoMessage()    {}
func (*Escrow) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{4}
}
func (m *Escrow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Escrow.Unmarshal(m, b)
}
func (m *Escrow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Escrow.Marshal(b, m, deterministic)
}
func (m *Escrow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Escrow.Merge(m, src)
}
func (m *Escrow) XXX_Size() int {
	return xxx_messageInfo_Escrow.Size(m)
}
func (m *Escrow) XXX_DiscardUnknown() {
	xxx_messageInfo_Escrow.DiscardUnknown(m)
}

var xxx_messageInfo_Escrow proto.InternalMessageInfo

func (m *Escrow) GetContractId() []byte {
	if m != nil {
		return m.ContractId
	}
	return nil
}

func (m *Escrow) GetEscrowId() int64 {
	if m != nil {
		return m.EscrowId
	}
	return 0
}

func (m *Escrow) GetFromAddress() []byte {
	if m != nil {
		return m.FromAddress
	}
	return nil
}

func (m *Escrow) GetToAddress() []byte {
	if m != nil {
		return m.ToAddress
	}
	return nil
}

func (m *Escrow) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Escrow) GetCollateralAmount() int64 {
	if m != nil {
		return m.CollateralAmount
	}
	return 0
}

type EscrowContractResult struct {
	PayinId              []byte           `protobuf:"bytes,1,opt,name=payin_id,json=payinId,proto3" json:"payin_id,omitempty"`
	Escrow               []*Escrow        `protobuf:"bytes,2,rep,name=escrow,proto3" json:"escrow,omitempty"`
	EscrowAddress        []byte           `protobuf:"bytes,3,opt,name=escrow_address,json=escrowAddress,proto3" json:"escrow_address,omitempty"`
	EscrowSignedTime     *types.Timestamp `protobuf:"bytes,4,opt,name=escrow_signed_time,json=escrowSignedTime,proto3" json:"escrow_signed_time,omitempty"`
	EscrowSignature      []byte           `protobuf:"bytes,5,opt,name=escrow_signature,json=escrowSignature,proto3" json:"escrow_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EscrowContractResult) Reset()         { *m = EscrowContractResult{} }
func (m *EscrowContractResult) String() string { return proto.CompactTextString(m) }
func (*EscrowContractResult) ProtoMessage()    {}
func (*EscrowContractResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{5}
}
func (m *EscrowContractResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscrowContractResult.Unmarshal(m, b)
}
func (m *EscrowContractResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscrowContractResult.Marshal(b, m, deterministic)
}
func (m *EscrowContractResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscrowContractResult.Merge(m, src)
}
func (m *EscrowContractResult) XXX_Size() int {
	return xxx_messageInfo_EscrowContractResult.Size(m)
}
func (m *EscrowContractResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EscrowContractResult.DiscardUnknown(m)
}

var xxx_messageInfo_EscrowContractResult proto.InternalMessageInfo

func (m *EscrowContractResult) GetPayinId() []byte {
	if m != nil {
		return m.PayinId
	}
	return nil
}

func (m *EscrowContractResult) GetEscrow() []*Escrow {
	if m != nil {
		return m.Escrow
	}
	return nil
}

func (m *EscrowContractResult) GetEscrowAddress() []byte {
	if m != nil {
		return m.EscrowAddress
	}
	return nil
}

func (m *EscrowContractResult) GetEscrowSignedTime() *types.Timestamp {
	if m != nil {
		return m.EscrowSignedTime
	}
	return nil
}

func (m *EscrowContractResult) GetEscrowSignature() []byte {
	if m != nil {
		return m.EscrowSignature
	}
	return nil
}

type PayinRquest struct {
	PayinId              []byte   `protobuf:"bytes,1,opt,name=payin_id,json=payinId,proto3" json:"payin_id,omitempty"`
	BuyerAddress         []byte   `protobuf:"bytes,2,opt,name=buyer_address,json=buyerAddress,proto3" json:"buyer_address,omitempty"`
	BuyerSignature       []byte   `protobuf:"bytes,3,opt,name=buyer_signature,json=buyerSignature,proto3" json:"buyer_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayinRquest) Reset()         { *m = PayinRquest{} }
func (m *PayinRquest) String() string { return proto.CompactTextString(m) }
func (*PayinRquest) ProtoMessage()    {}
func (*PayinRquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{6}
}
func (m *PayinRquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayinRquest.Unmarshal(m, b)
}
func (m *PayinRquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayinRquest.Marshal(b, m, deterministic)
}
func (m *PayinRquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayinRquest.Merge(m, src)
}
func (m *PayinRquest) XXX_Size() int {
	return xxx_messageInfo_PayinRquest.Size(m)
}
func (m *PayinRquest) XXX_DiscardUnknown() {
	xxx_messageInfo_PayinRquest.DiscardUnknown(m)
}

var xxx_messageInfo_PayinRquest proto.InternalMessageInfo

func (m *PayinRquest) GetPayinId() []byte {
	if m != nil {
		return m.PayinId
	}
	return nil
}

func (m *PayinRquest) GetBuyerAddress() []byte {
	if m != nil {
		return m.BuyerAddress
	}
	return nil
}

func (m *PayinRquest) GetBuyerSignature() []byte {
	if m != nil {
		return m.BuyerSignature
	}
	return nil
}

type PayinResult struct {
	PayinId              []byte           `protobuf:"bytes,1,opt,name=payin_id,json=payinId,proto3" json:"payin_id,omitempty"`
	Amount               int64            `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SequenceId           int64            `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	EscrowAddress        []byte           `protobuf:"bytes,4,opt,name=escrow_address,json=escrowAddress,proto3" json:"escrow_address,omitempty"`
	EscrowSignedTime     *types.Timestamp `protobuf:"bytes,5,opt,name=escrow_signed_time,json=escrowSignedTime,proto3" json:"escrow_signed_time,omitempty"`
	EscrowSignature      []byte           `protobuf:"bytes,6,opt,name=escrow_signature,json=escrowSignature,proto3" json:"escrow_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PayinResult) Reset()         { *m = PayinResult{} }
func (m *PayinResult) String() string { return proto.CompactTextString(m) }
func (*PayinResult) ProtoMessage()    {}
func (*PayinResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{7}
}
func (m *PayinResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayinResult.Unmarshal(m, b)
}
func (m *PayinResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayinResult.Marshal(b, m, deterministic)
}
func (m *PayinResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayinResult.Merge(m, src)
}
func (m *PayinResult) XXX_Size() int {
	return xxx_messageInfo_PayinResult.Size(m)
}
func (m *PayinResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PayinResult.DiscardUnknown(m)
}

var xxx_messageInfo_PayinResult proto.InternalMessageInfo

func (m *PayinResult) GetPayinId() []byte {
	if m != nil {
		return m.PayinId
	}
	return nil
}

func (m *PayinResult) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PayinResult) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *PayinResult) GetEscrowAddress() []byte {
	if m != nil {
		return m.EscrowAddress
	}
	return nil
}

func (m *PayinResult) GetEscrowSignedTime() *types.Timestamp {
	if m != nil {
		return m.EscrowSignedTime
	}
	return nil
}

func (m *PayinResult) GetEscrowSignature() []byte {
	if m != nil {
		return m.EscrowSignature
	}
	return nil
}

type PayinStatus struct {
	Paid                 bool     `protobuf:"varint,1,opt,name=paid,proto3" json:"paid,omitempty"`
	SequenceId           int64    `protobuf:"varint,2,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayinStatus) Reset()         { *m = PayinStatus{} }
func (m *PayinStatus) String() string { return proto.CompactTextString(m) }
func (*PayinStatus) ProtoMessage()    {}
func (*PayinStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{8}
}
func (m *PayinStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayinStatus.Unmarshal(m, b)
}
func (m *PayinStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayinStatus.Marshal(b, m, deterministic)
}
func (m *PayinStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayinStatus.Merge(m, src)
}
func (m *PayinStatus) XXX_Size() int {
	return xxx_messageInfo_PayinStatus.Size(m)
}
func (m *PayinStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PayinStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PayinStatus proto.InternalMessageInfo

func (m *PayinStatus) GetPaid() bool {
	if m != nil {
		return m.Paid
	}
	return false
}

func (m *PayinStatus) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

type PayoutStatus struct {
	FromAddress          []byte           `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress            []byte           `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	AuthAddress          []byte           `protobuf:"bytes,3,opt,name=auth_address,json=authAddress,proto3" json:"auth_address,omitempty"`
	Status               EscrowStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=escrow.EscrowStatus" json:"status,omitempty"`
	Amount               int64            `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Collateral           int64            `protobuf:"varint,6,opt,name=collateral,proto3" json:"collateral,omitempty"`
	Withhold             int64            `protobuf:"varint,7,opt,name=withhold,proto3" json:"withhold,omitempty"`
	PaidAmount           int64            `protobuf:"varint,8,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount,omitempty"`
	NumPaid              int32            `protobuf:"varint,9,opt,name=num_paid,json=numPaid,proto3" json:"num_paid,omitempty"`
	LeftAmount           int64            `protobuf:"varint,10,opt,name=left_amount,json=leftAmount,proto3" json:"left_amount,omitempty"`
	NumLeft              int32            `protobuf:"varint,11,opt,name=num_left,json=numLeft,proto3" json:"num_left,omitempty"`
	NextAmount           int64            `protobuf:"varint,12,opt,name=next_amount,json=nextAmount,proto3" json:"next_amount,omitempty"`
	LastPayoutTime       *types.Timestamp `protobuf:"bytes,13,opt,name=last_payout_time,json=lastPayoutTime,proto3" json:"last_payout_time,omitempty"`
	NextPayoutTime       *types.Timestamp `protobuf:"bytes,14,opt,name=next_payout_time,json=nextPayoutTime,proto3" json:"next_payout_time,omitempty"`
	EscrowAddress        []byte           `protobuf:"bytes,15,opt,name=escrow_address,json=escrowAddress,proto3" json:"escrow_address,omitempty"`
	SignTime             *types.Timestamp `protobuf:"bytes,16,opt,name=sign_time,json=signTime,proto3" json:"sign_time,omitempty"`
	EscrowSignature      []byte           `protobuf:"bytes,17,opt,name=escrow_signature,json=escrowSignature,proto3" json:"escrow_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PayoutStatus) Reset()         { *m = PayoutStatus{} }
func (m *PayoutStatus) String() string { return proto.CompactTextString(m) }
func (*PayoutStatus) ProtoMessage()    {}
func (*PayoutStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{9}
}
func (m *PayoutStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayoutStatus.Unmarshal(m, b)
}
func (m *PayoutStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayoutStatus.Marshal(b, m, deterministic)
}
func (m *PayoutStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayoutStatus.Merge(m, src)
}
func (m *PayoutStatus) XXX_Size() int {
	return xxx_messageInfo_PayoutStatus.Size(m)
}
func (m *PayoutStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PayoutStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PayoutStatus proto.InternalMessageInfo

func (m *PayoutStatus) GetFromAddress() []byte {
	if m != nil {
		return m.FromAddress
	}
	return nil
}

func (m *PayoutStatus) GetToAddress() []byte {
	if m != nil {
		return m.ToAddress
	}
	return nil
}

func (m *PayoutStatus) GetAuthAddress() []byte {
	if m != nil {
		return m.AuthAddress
	}
	return nil
}

func (m *PayoutStatus) GetStatus() EscrowStatus {
	if m != nil {
		return m.Status
	}
	return EscrowStatus_INITIATED
}

func (m *PayoutStatus) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PayoutStatus) GetCollateral() int64 {
	if m != nil {
		return m.Collateral
	}
	return 0
}

func (m *PayoutStatus) GetWithhold() int64 {
	if m != nil {
		return m.Withhold
	}
	return 0
}

func (m *PayoutStatus) GetPaidAmount() int64 {
	if m != nil {
		return m.PaidAmount
	}
	return 0
}

func (m *PayoutStatus) GetNumPaid() int32 {
	if m != nil {
		return m.NumPaid
	}
	return 0
}

func (m *PayoutStatus) GetLeftAmount() int64 {
	if m != nil {
		return m.LeftAmount
	}
	return 0
}

func (m *PayoutStatus) GetNumLeft() int32 {
	if m != nil {
		return m.NumLeft
	}
	return 0
}

func (m *PayoutStatus) GetNextAmount() int64 {
	if m != nil {
		return m.NextAmount
	}
	return 0
}

func (m *PayoutStatus) GetLastPayoutTime() *types.Timestamp {
	if m != nil {
		return m.LastPayoutTime
	}
	return nil
}

func (m *PayoutStatus) GetNextPayoutTime() *types.Timestamp {
	if m != nil {
		return m.NextPayoutTime
	}
	return nil
}

func (m *PayoutStatus) GetEscrowAddress() []byte {
	if m != nil {
		return m.EscrowAddress
	}
	return nil
}

func (m *PayoutStatus) GetSignTime() *types.Timestamp {
	if m != nil {
		return m.SignTime
	}
	return nil
}

func (m *PayoutStatus) GetEscrowSignature() []byte {
	if m != nil {
		return m.EscrowSignature
	}
	return nil
}

type CancelContractRequest struct {
	ContractId           [][]byte `protobuf:"bytes,1,rep,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	AuthAddress          []byte   `protobuf:"bytes,2,opt,name=auth_address,json=authAddress,proto3" json:"auth_address,omitempty"`
	AuthSignature        []byte   `protobuf:"bytes,3,opt,name=auth_signature,json=authSignature,proto3" json:"auth_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelContractRequest) Reset()         { *m = CancelContractRequest{} }
func (m *CancelContractRequest) String() string { return proto.CompactTextString(m) }
func (*CancelContractRequest) ProtoMessage()    {}
func (*CancelContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{10}
}
func (m *CancelContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelContractRequest.Unmarshal(m, b)
}
func (m *CancelContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelContractRequest.Marshal(b, m, deterministic)
}
func (m *CancelContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelContractRequest.Merge(m, src)
}
func (m *CancelContractRequest) XXX_Size() int {
	return xxx_messageInfo_CancelContractRequest.Size(m)
}
func (m *CancelContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelContractRequest proto.InternalMessageInfo

func (m *CancelContractRequest) GetContractId() [][]byte {
	if m != nil {
		return m.ContractId
	}
	return nil
}

func (m *CancelContractRequest) GetAuthAddress() []byte {
	if m != nil {
		return m.AuthAddress
	}
	return nil
}

func (m *CancelContractRequest) GetAuthSignature() []byte {
	if m != nil {
		return m.AuthSignature
	}
	return nil
}

type CancelContractResult struct {
	Result               *CancelContractResult_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	EscrowAddress        []byte                       `protobuf:"bytes,2,opt,name=escrow_address,json=escrowAddress,proto3" json:"escrow_address,omitempty"`
	EscrowSignedTime     *types.Timestamp             `protobuf:"bytes,3,opt,name=escrow_signed_time,json=escrowSignedTime,proto3" json:"escrow_signed_time,omitempty"`
	EscrowSignature      []byte                       `protobuf:"bytes,4,opt,name=escrow_signature,json=escrowSignature,proto3" json:"escrow_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CancelContractResult) Reset()         { *m = CancelContractResult{} }
func (m *CancelContractResult) String() string { return proto.CompactTextString(m) }
func (*CancelContractResult) ProtoMessage()    {}
func (*CancelContractResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{11}
}
func (m *CancelContractResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelContractResult.Unmarshal(m, b)
}
func (m *CancelContractResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelContractResult.Marshal(b, m, deterministic)
}
func (m *CancelContractResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelContractResult.Merge(m, src)
}
func (m *CancelContractResult) XXX_Size() int {
	return xxx_messageInfo_CancelContractResult.Size(m)
}
func (m *CancelContractResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelContractResult.DiscardUnknown(m)
}

var xxx_messageInfo_CancelContractResult proto.InternalMessageInfo

func (m *CancelContractResult) GetResult() *CancelContractResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CancelContractResult) GetEscrowAddress() []byte {
	if m != nil {
		return m.EscrowAddress
	}
	return nil
}

func (m *CancelContractResult) GetEscrowSignedTime() *types.Timestamp {
	if m != nil {
		return m.EscrowSignedTime
	}
	return nil
}

func (m *CancelContractResult) GetEscrowSignature() []byte {
	if m != nil {
		return m.EscrowSignature
	}
	return nil
}

type CancelContractResult_Result struct {
	ContractId           []byte   `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	EscrowId             int64    `protobuf:"varint,2,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	Canceled             bool     `protobuf:"varint,3,opt,name=canceled,proto3" json:"canceled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelContractResult_Result) Reset()         { *m = CancelContractResult_Result{} }
func (m *CancelContractResult_Result) String() string { return proto.CompactTextString(m) }
func (*CancelContractResult_Result) ProtoMessage()    {}
func (*CancelContractResult_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a6463c7f7e20b5, []int{11, 0}
}
func (m *CancelContractResult_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelContractResult_Result.Unmarshal(m, b)
}
func (m *CancelContractResult_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelContractResult_Result.Marshal(b, m, deterministic)
}
func (m *CancelContractResult_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelContractResult_Result.Merge(m, src)
}
func (m *CancelContractResult_Result) XXX_Size() int {
	return xxx_messageInfo_CancelContractResult_Result.Size(m)
}
func (m *CancelContractResult_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelContractResult_Result.DiscardUnknown(m)
}

var xxx_messageInfo_CancelContractResult_Result proto.InternalMessageInfo

func (m *CancelContractResult_Result) GetContractId() []byte {
	if m != nil {
		return m.ContractId
	}
	return nil
}

func (m *CancelContractResult_Result) GetEscrowId() int64 {
	if m != nil {
		return m.EscrowId
	}
	return 0
}

func (m *CancelContractResult_Result) GetCanceled() bool {
	if m != nil {
		return m.Canceled
	}
	return false
}

func init() {
	proto.RegisterEnum("escrow.TokenType", TokenType_name, TokenType_value)
	proto.RegisterEnum("escrow.Schedule", Schedule_name, Schedule_value)
	proto.RegisterEnum("escrow.EscrowStatus", EscrowStatus_name, EscrowStatus_value)
	proto.RegisterType((*ContractID)(nil), "escrow.ContractID")
	proto.RegisterType((*EscrowContract)(nil), "escrow.EscrowContract")
	proto.RegisterType((*SignedEscrowContract)(nil), "escrow.SignedEscrowContract")
	proto.RegisterType((*EscrowContractRequest)(nil), "escrow.EscrowContractRequest")
	proto.RegisterType((*Escrow)(nil), "escrow.Escrow")
	proto.RegisterType((*EscrowContractResult)(nil), "escrow.EscrowContractResult")
	proto.RegisterType((*PayinRquest)(nil), "escrow.PayinRquest")
	proto.RegisterType((*PayinResult)(nil), "escrow.PayinResult")
	proto.RegisterType((*PayinStatus)(nil), "escrow.PayinStatus")
	proto.RegisterType((*PayoutStatus)(nil), "escrow.PayoutStatus")
	proto.RegisterType((*CancelContractRequest)(nil), "escrow.CancelContractRequest")
	proto.RegisterType((*CancelContractResult)(nil), "escrow.CancelContractResult")
	proto.RegisterType((*CancelContractResult_Result)(nil), "escrow.CancelContractResult.Result")
}

func init() { proto.RegisterFile("protos/escrow/escrow.proto", fileDescriptor_92a6463c7f7e20b5) }

var fileDescriptor_92a6463c7f7e20b5 = []byte{
	// 1174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x5f, 0x6f, 0xe2, 0x46,
	0x10, 0x8f, 0x4d, 0x00, 0x33, 0x80, 0x71, 0xb6, 0xdc, 0x89, 0xa3, 0xb9, 0x26, 0xe5, 0x74, 0x6d,
	0x2e, 0xad, 0x48, 0x4b, 0x2b, 0xb5, 0xd5, 0x3d, 0x11, 0x40, 0x3d, 0x24, 0x4a, 0x72, 0x86, 0xab,
	0x94, 0xbe, 0x20, 0x83, 0x97, 0x04, 0xd5, 0xd8, 0xd4, 0x5e, 0xdf, 0x95, 0xd7, 0x7e, 0x90, 0xbe,
	0xf5, 0x4b, 0xf4, 0x3b, 0xf4, 0xa5, 0xfd, 0x2c, 0x7d, 0xac, 0x54, 0xed, 0x3f, 0x1b, 0x1c, 0xa7,
	0x44, 0x6a, 0x9e, 0xc2, 0xfe, 0xf6, 0x37, 0xbb, 0x3b, 0x33, 0xbf, 0x99, 0x71, 0xa0, 0xbe, 0xf2,
	0x3d, 0xe2, 0x05, 0x67, 0x38, 0x98, 0xf9, 0xde, 0x3b, 0xf1, 0xa7, 0xc9, 0x40, 0x94, 0xe3, 0xab,
	0xfa, 0xd1, 0xb5, 0xe7, 0x5d, 0x3b, 0xf8, 0x8c, 0xa1, 0xd3, 0x70, 0x7e, 0x46, 0x16, 0x4b, 0x1c,
	0x10, 0x6b, 0xb9, 0xe2, 0xc4, 0x06, 0x06, 0xe8, 0x78, 0x2e, 0xf1, 0xad, 0x19, 0xe9, 0x77, 0xd1,
	0x11, 0x14, 0x67, 0x62, 0x35, 0x59, 0xd8, 0x35, 0xe5, 0x58, 0x39, 0x29, 0x99, 0x20, 0xa1, 0xbe,
	0x8d, 0x6a, 0x90, 0xb7, 0x6c, 0xdb, 0xc7, 0x41, 0x50, 0x53, 0xd9, 0xa6, 0x5c, 0xa2, 0x43, 0x28,
	0x04, 0x8b, 0x6b, 0xd7, 0x22, 0xa1, 0x8f, 0x6b, 0x19, 0xb6, 0x17, 0x03, 0x8d, 0xdf, 0x33, 0xa0,
	0xf7, 0xd8, 0x93, 0xe4, 0x6d, 0xbb, 0xef, 0x7a, 0x06, 0xe5, 0x69, 0xb8, 0xc6, 0xfe, 0x64, 0xfb,
	0xc6, 0x12, 0x03, 0xdb, 0xe2, 0xda, 0xe7, 0xa0, 0x07, 0xd8, 0x71, 0x36, 0x58, 0xfc, 0xee, 0x32,
	0x47, 0x25, 0xed, 0x43, 0x28, 0x59, 0x21, 0xb9, 0x89, 0x48, 0xfb, 0x8c, 0x54, 0xa4, 0x98, 0xa4,
	0x3c, 0x86, 0x9c, 0xb5, 0xf4, 0x42, 0x97, 0xd4, 0xb2, 0xc7, 0xca, 0x49, 0xc6, 0x14, 0x2b, 0xf4,
	0x09, 0x1c, 0xcc, 0x3c, 0xc7, 0xb1, 0x08, 0xf6, 0x2d, 0x67, 0x22, 0x28, 0x39, 0x46, 0x31, 0xe2,
	0x8d, 0x36, 0x27, 0x7f, 0x0c, 0x95, 0x77, 0x0b, 0x72, 0x73, 0xe3, 0x39, 0xb6, 0xa4, 0xe6, 0x19,
	0x55, 0x97, 0xb0, 0x20, 0x7e, 0x06, 0x40, 0xbc, 0x1f, 0xb1, 0x3b, 0x21, 0xeb, 0x15, 0xae, 0x69,
	0xc7, 0xca, 0x89, 0xde, 0x3a, 0x68, 0x8a, 0x1c, 0x8e, 0xe9, 0xce, 0x78, 0xbd, 0xc2, 0x66, 0x81,
	0xc8, 0x9f, 0xe8, 0x1b, 0xa8, 0xac, 0xac, 0xb5, 0x17, 0x92, 0x49, 0x30, 0xbb, 0xc1, 0x76, 0xe8,
	0xe0, 0x5a, 0x81, 0x99, 0x19, 0xd2, 0x6c, 0x24, 0x70, 0x53, 0xe7, 0x44, 0xb9, 0xa6, 0xa1, 0x76,
	0xc3, 0xe5, 0x84, 0xa3, 0x41, 0x0d, 0x8e, 0x95, 0x93, 0xac, 0x09, 0x6e, 0xb8, 0xbc, 0xe4, 0x08,
	0x4d, 0x9e, 0x8f, 0xe7, 0xd8, 0xc7, 0xee, 0x0c, 0xd7, 0x8a, 0x3c, 0x79, 0x11, 0xd0, 0xf8, 0x55,
	0x81, 0xea, 0x68, 0x71, 0xed, 0x62, 0x3b, 0x91, 0xc2, 0x16, 0x68, 0x32, 0x5f, 0x2c, 0x7f, 0xc5,
	0xd6, 0x63, 0xf9, 0x96, 0x6d, 0xa6, 0x19, 0xf1, 0x68, 0x84, 0x78, 0x56, 0x63, 0xb5, 0xf0, 0xbc,
	0xea, 0x0c, 0x1e, 0x49, 0x14, 0xbd, 0x00, 0x43, 0x64, 0x36, 0xa9, 0xab, 0x0a, 0xc7, 0x23, 0x6a,
	0xe3, 0x35, 0x3c, 0x4a, 0xdc, 0x87, 0x7f, 0x0a, 0x71, 0x40, 0xd0, 0xd7, 0x5b, 0x0f, 0xcc, 0x9c,
	0x14, 0x5b, 0x87, 0x51, 0xb0, 0x52, 0x1c, 0x8a, 0x9f, 0xd9, 0xf8, 0x43, 0x81, 0x1c, 0xdf, 0xdc,
	0x2d, 0xd4, 0xf7, 0xa1, 0xc0, 0x0f, 0xa5, 0xdb, 0x2a, 0x4b, 0xb7, 0xc6, 0x81, 0xbe, 0x4d, 0x95,
	0x37, 0xf7, 0xbd, 0x65, 0x42, 0x9e, 0x45, 0x8a, 0x49, 0xe5, 0x3d, 0xa5, 0x5a, 0x48, 0x48, 0xb3,
	0x40, 0xbc, 0x87, 0x14, 0x66, 0xe3, 0x6f, 0x05, 0xaa, 0xc9, 0x18, 0x05, 0xa1, 0x43, 0xd0, 0x13,
	0xd0, 0x56, 0xd6, 0x7a, 0xe1, 0xc6, 0xae, 0xe5, 0xd9, 0xba, 0x6f, 0xa3, 0x8f, 0x40, 0xb4, 0x91,
	0x9a, 0xca, 0x62, 0xa7, 0x6f, 0x27, 0xd7, 0x14, 0xbb, 0xb4, 0x06, 0x85, 0xff, 0x89, 0x1a, 0xe4,
	0xa8, 0xf4, 0xe3, 0x15, 0x20, 0x41, 0x0b, 0x58, 0xec, 0x27, 0xb4, 0x17, 0x31, 0x77, 0x8b, 0xad,
	0x7a, 0x93, 0x37, 0xaa, 0xa6, 0x6c, 0x54, 0xcd, 0xb1, 0x6c, 0x54, 0xa6, 0xc1, 0xad, 0x78, 0xc2,
	0x28, 0x4c, 0xa5, 0xb1, 0x71, 0x12, 0x97, 0x46, 0x96, 0x4b, 0x23, 0xe6, 0x72, 0x69, 0xbc, 0x85,
	0xe2, 0x25, 0x75, 0xc7, 0xe4, 0x82, 0xf8, 0x0f, 0x6f, 0xef, 0xd5, 0x6e, 0x52, 0xd4, 0x9b, 0x49,
	0x53, 0x6f, 0xe3, 0x1f, 0x45, 0x5e, 0xbc, 0x33, 0xcc, 0x71, 0x7e, 0xd5, 0xad, 0xfc, 0x1e, 0x41,
	0x31, 0xa0, 0x3a, 0x76, 0x67, 0x98, 0x5a, 0x65, 0xd8, 0x26, 0x48, 0xa8, 0x6f, 0xa7, 0xc4, 0x7d,
	0xff, 0xfe, 0x71, 0xcf, 0x3e, 0x50, 0xdc, 0x73, 0xe9, 0x71, 0x3f, 0x17, 0xee, 0x8f, 0x88, 0x45,
	0xc2, 0x00, 0x21, 0xd8, 0x5f, 0x59, 0xc2, 0x75, 0xcd, 0x64, 0xbf, 0x93, 0xfe, 0xa9, 0x49, 0xff,
	0x1a, 0xbf, 0x65, 0xa1, 0xc4, 0x3b, 0x94, 0x38, 0x25, 0x59, 0x4b, 0xca, 0xae, 0x5a, 0x52, 0x93,
	0xb5, 0x94, 0x9c, 0x03, 0x99, 0xdb, 0x73, 0xe0, 0x53, 0xc8, 0x05, 0xec, 0x3a, 0x16, 0x4d, 0xbd,
	0x55, 0xdd, 0x56, 0x3d, 0x7f, 0x8a, 0x29, 0x38, 0x77, 0x16, 0xe7, 0x07, 0x00, 0x71, 0x0d, 0x8a,
	0xaa, 0xdc, 0x40, 0x50, 0x1d, 0x34, 0x39, 0x11, 0xc4, 0x84, 0x88, 0xd6, 0x34, 0x30, 0x34, 0x40,
	0xb2, 0xa4, 0x35, 0x6e, 0x4c, 0x21, 0x31, 0x3c, 0x9e, 0x80, 0xc6, 0xfb, 0xf9, 0xc2, 0x66, 0x33,
	0x20, 0x6b, 0xe6, 0x59, 0x33, 0xe7, 0x41, 0x75, 0xf0, 0x9c, 0x48, 0x5b, 0xe0, 0xb6, 0x14, 0xda,
	0xb6, 0xa5, 0x08, 0xeb, 0xf4, 0xdc, 0x76, 0x80, 0xe7, 0x4c, 0x70, 0x2e, 0xfe, 0x39, 0xb2, 0x2d,
	0x71, 0x5b, 0x0a, 0x09, 0xdb, 0x2e, 0x18, 0x8e, 0x15, 0x10, 0x31, 0x48, 0xb8, 0x8e, 0xca, 0x3b,
	0x75, 0xa4, 0x53, 0x1b, 0x9e, 0x47, 0xa6, 0xa2, 0x2e, 0x18, 0xec, 0x9a, 0xcd, 0x53, 0xf4, 0xdd,
	0xa7, 0x50, 0x9b, 0x8d, 0x53, 0x6e, 0x8b, 0xbf, 0x92, 0x26, 0xfe, 0xaf, 0xf8, 0x67, 0x09, 0xbf,
	0xc5, 0xd8, 0x79, 0x8b, 0x46, 0xc9, 0x77, 0x6a, 0xfd, 0x20, 0x5d, 0xeb, 0xbf, 0x28, 0xf0, 0xa8,
	0x63, 0xb9, 0x33, 0xec, 0x24, 0xe7, 0xcf, 0xad, 0xd1, 0x91, 0x49, 0x8c, 0x8e, 0xa4, 0x1e, 0xd5,
	0xdb, 0x7a, 0x7c, 0x0e, 0x3a, 0xa3, 0x24, 0x3b, 0x4e, 0x99, 0xa2, 0xf1, 0x23, 0xfe, 0x52, 0xa1,
	0x9a, 0x7c, 0x04, 0xeb, 0x3c, 0x2f, 0x21, 0xe7, 0xb3, 0x5f, 0x62, 0x44, 0x3f, 0x93, 0x7a, 0x4e,
	0x63, 0x37, 0xf9, 0x1f, 0x53, 0x98, 0xa4, 0x44, 0x59, 0xbd, 0x7f, 0x8b, 0xc9, 0x3c, 0x50, 0x8b,
	0xd9, 0x4f, 0x0d, 0x7b, 0x7d, 0x0a, 0x39, 0xe1, 0xe2, 0xff, 0x9b, 0xd0, 0x75, 0xd0, 0x66, 0x2c,
	0x14, 0x98, 0x37, 0x59, 0xcd, 0x8c, 0xd6, 0xa7, 0x55, 0x28, 0x44, 0x1f, 0x63, 0x28, 0x0f, 0x99,
	0xf3, 0xf1, 0xd8, 0xd8, 0x3b, 0xfd, 0x12, 0xb4, 0xe8, 0xdb, 0xaa, 0x08, 0xf9, 0xef, 0x2e, 0x86,
	0xe3, 0x57, 0x83, 0x2b, 0x63, 0x0f, 0x95, 0xa1, 0xf0, 0xfa, 0x4d, 0xdb, 0x1c, 0xf7, 0xcc, 0xc1,
	0x95, 0xa1, 0xa0, 0x12, 0x68, 0xed, 0xe1, 0xf0, 0x4d, 0x7b, 0x30, 0xb8, 0x32, 0xd4, 0xd3, 0x0e,
	0x94, 0x36, 0x5b, 0x08, 0x25, 0xf7, 0x87, 0xfd, 0x71, 0xbf, 0x3d, 0xee, 0x75, 0x8d, 0x3d, 0x04,
	0x90, 0x6b, 0x77, 0xc6, 0xfd, 0xef, 0x7b, 0xdc, 0xb0, 0xd3, 0x1e, 0x76, 0x7a, 0x83, 0x5e, 0xd7,
	0x50, 0xe9, 0x4e, 0x67, 0x70, 0x31, 0xea, 0x75, 0x8d, 0x4c, 0xeb, 0x4f, 0x15, 0xca, 0xe2, 0x14,
	0xec, 0xbf, 0x5d, 0xcc, 0x30, 0x1a, 0x42, 0x65, 0x14, 0x4e, 0x97, 0x0b, 0x22, 0x33, 0x19, 0xa0,
	0xa7, 0x77, 0x7c, 0x85, 0x71, 0x55, 0xd6, 0x0f, 0xef, 0xda, 0x66, 0xc1, 0xfc, 0x1c, 0xb2, 0x97,
	0xd6, 0xba, 0xef, 0xa2, 0xf7, 0x24, 0x6d, 0x63, 0x80, 0xd6, 0x13, 0xa0, 0x34, 0xc9, 0xf5, 0x03,
	0xd6, 0x7e, 0x50, 0x24, 0xae, 0xe8, 0x9f, 0x8a, 0x84, 0x89, 0x70, 0xfe, 0x25, 0x54, 0xbe, 0xc5,
	0xb4, 0x9e, 0x2f, 0xa2, 0xee, 0x9e, 0x66, 0x5b, 0xdd, 0xb0, 0x8d, 0xe7, 0xc0, 0x10, 0x2a, 0xdb,
	0xe2, 0xdd, 0x70, 0x39, 0xb5, 0x10, 0x63, 0x97, 0xd3, 0x44, 0x7f, 0xfe, 0x02, 0xf4, 0x85, 0xd7,
	0x9c, 0x92, 0x79, 0x20, 0x68, 0xe7, 0x45, 0x1e, 0x9a, 0x4b, 0x2a, 0xd9, 0x4b, 0xe5, 0x07, 0x21,
	0x96, 0xd5, 0x74, 0x9a, 0x63, 0x2a, 0xfe, 0xe2, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x6e,
	0x17, 0xc2, 0x7d, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EscrowServiceClient is the client API for EscrowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EscrowServiceClient interface {
	// buyer submit contracts to escrow after buyer and seller agreed contract
	// one contract is one buyer to one seller, and is one escrow in escrow service
	// buyer can submit multiple contracts in one request
	// return same number of results as request contracts
	SubmitContracts(ctx context.Context, in *EscrowContractRequest, opts ...grpc.CallOption) (*EscrowContractResult, error)
	// after submit contract, buyer request to pay in
	// escrow will transfer contract amount from buyer wallet to escrow wallet
	PayIn(ctx context.Context, in *PayinRquest, opts ...grpc.CallOption) (*PayinResult, error)
	// seller use this to check if a contract is paid in
	IsPaid(ctx context.Context, in *ContractID, opts ...grpc.CallOption) (*PayinStatus, error)
	// check escrow pay out to seller status of a contract
	GetPayOutStatus(ctx context.Context, in *ContractID, opts ...grpc.CallOption) (*PayoutStatus, error)
	// auth request to cancel the contract
	// escrow will cancel the left payments to seller
	CancelContracts(ctx context.Context, in *CancelContractRequest, opts ...grpc.CallOption) (*CancelContractResult, error)
}

type escrowServiceClient struct {
	cc *grpc.ClientConn
}

func NewEscrowServiceClient(cc *grpc.ClientConn) EscrowServiceClient {
	return &escrowServiceClient{cc}
}

func (c *escrowServiceClient) SubmitContracts(ctx context.Context, in *EscrowContractRequest, opts ...grpc.CallOption) (*EscrowContractResult, error) {
	out := new(EscrowContractResult)
	err := c.cc.Invoke(ctx, "/escrow.EscrowService/SubmitContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *escrowServiceClient) PayIn(ctx context.Context, in *PayinRquest, opts ...grpc.CallOption) (*PayinResult, error) {
	out := new(PayinResult)
	err := c.cc.Invoke(ctx, "/escrow.EscrowService/PayIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *escrowServiceClient) IsPaid(ctx context.Context, in *ContractID, opts ...grpc.CallOption) (*PayinStatus, error) {
	out := new(PayinStatus)
	err := c.cc.Invoke(ctx, "/escrow.EscrowService/IsPaid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *escrowServiceClient) GetPayOutStatus(ctx context.Context, in *ContractID, opts ...grpc.CallOption) (*PayoutStatus, error) {
	out := new(PayoutStatus)
	err := c.cc.Invoke(ctx, "/escrow.EscrowService/GetPayOutStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *escrowServiceClient) CancelContracts(ctx context.Context, in *CancelContractRequest, opts ...grpc.CallOption) (*CancelContractResult, error) {
	out := new(CancelContractResult)
	err := c.cc.Invoke(ctx, "/escrow.EscrowService/CancelContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EscrowServiceServer is the server API for EscrowService service.
type EscrowServiceServer interface {
	// buyer submit contracts to escrow after buyer and seller agreed contract
	// one contract is one buyer to one seller, and is one escrow in escrow service
	// buyer can submit multiple contracts in one request
	// return same number of results as request contracts
	SubmitContracts(context.Context, *EscrowContractRequest) (*EscrowContractResult, error)
	// after submit contract, buyer request to pay in
	// escrow will transfer contract amount from buyer wallet to escrow wallet
	PayIn(context.Context, *PayinRquest) (*PayinResult, error)
	// seller use this to check if a contract is paid in
	IsPaid(context.Context, *ContractID) (*PayinStatus, error)
	// check escrow pay out to seller status of a contract
	GetPayOutStatus(context.Context, *ContractID) (*PayoutStatus, error)
	// auth request to cancel the contract
	// escrow will cancel the left payments to seller
	CancelContracts(context.Context, *CancelContractRequest) (*CancelContractResult, error)
}

// UnimplementedEscrowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEscrowServiceServer struct {
}

func (*UnimplementedEscrowServiceServer) SubmitContracts(ctx context.Context, req *EscrowContractRequest) (*EscrowContractResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitContracts not implemented")
}
func (*UnimplementedEscrowServiceServer) PayIn(ctx context.Context, req *PayinRquest) (*PayinResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PayIn not implemented")
}
func (*UnimplementedEscrowServiceServer) IsPaid(ctx context.Context, req *ContractID) (*PayinStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsPaid not implemented")
}
func (*UnimplementedEscrowServiceServer) GetPayOutStatus(ctx context.Context, req *ContractID) (*PayoutStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPayOutStatus not implemented")
}
func (*UnimplementedEscrowServiceServer) CancelContracts(ctx context.Context, req *CancelContractRequest) (*CancelContractResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelContracts not implemented")
}

func RegisterEscrowServiceServer(s *grpc.Server, srv EscrowServiceServer) {
	s.RegisterService(&_EscrowService_serviceDesc, srv)
}

func _EscrowService_SubmitContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EscrowContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowServiceServer).SubmitContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrow.EscrowService/SubmitContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowServiceServer).SubmitContracts(ctx, req.(*EscrowContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EscrowService_PayIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayinRquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowServiceServer).PayIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrow.EscrowService/PayIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowServiceServer).PayIn(ctx, req.(*PayinRquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EscrowService_IsPaid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowServiceServer).IsPaid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrow.EscrowService/IsPaid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowServiceServer).IsPaid(ctx, req.(*ContractID))
	}
	return interceptor(ctx, in, info, handler)
}

func _EscrowService_GetPayOutStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowServiceServer).GetPayOutStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrow.EscrowService/GetPayOutStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowServiceServer).GetPayOutStatus(ctx, req.(*ContractID))
	}
	return interceptor(ctx, in, info, handler)
}

func _EscrowService_CancelContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EscrowServiceServer).CancelContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/escrow.EscrowService/CancelContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EscrowServiceServer).CancelContracts(ctx, req.(*CancelContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EscrowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "escrow.EscrowService",
	HandlerType: (*EscrowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitContracts",
			Handler:    _EscrowService_SubmitContracts_Handler,
		},
		{
			MethodName: "PayIn",
			Handler:    _EscrowService_PayIn_Handler,
		},
		{
			MethodName: "IsPaid",
			Handler:    _EscrowService_IsPaid_Handler,
		},
		{
			MethodName: "GetPayOutStatus",
			Handler:    _EscrowService_GetPayOutStatus_Handler,
		},
		{
			MethodName: "CancelContracts",
			Handler:    _EscrowService_CancelContracts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/escrow/escrow.proto",
}
